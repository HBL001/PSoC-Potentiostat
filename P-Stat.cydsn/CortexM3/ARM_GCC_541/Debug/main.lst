ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	buffer,64,4
  20              		.comm	calibrate_array,20,4
  21              		.syntax unified
  22              		.global _printf_float
  23              		.thumb
  24              		.syntax unified
  25              		.comm	RX_Data,64,4
  26              		.comm	TX_Data,64,4
  27              		.comm	LCD_str_top,16,4
  28              		.comm	LCD_str_bot,16,4
  29              		.comm	TIA_offset,1,1
  30              		.comm	TIA_resistor_value_index,1,1
  31              		.comm	ADC_buffer_index,1,1
  32              		.comm	ADC_config,1,1
  33              		.global	voltage
  34              		.bss
  35              		.align	1
  36              		.type	voltage, %object
  37              		.size	voltage, 2
  38              	voltage:
  39 0000 0000     		.space	2
  40              		.global	current
  41 0002 0000     		.align	2
  42              		.type	current, %object
  43              		.size	current, 4
  44              	current:
  45 0004 00000000 		.space	4
  46              		.global	dac_Volts
  47              		.type	dac_Volts, %object
  48              		.size	dac_Volts, 1
  49              	dac_Volts:
  50 0008 00       		.space	1
  51              		.global	conversionCount
  52              		.type	conversionCount, %object
  53              		.size	conversionCount, 1
  54              	conversionCount:
  55 0009 00       		.space	1
  56              		.global	dataReady
  57              		.type	dataReady, %object
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 2


  58              		.size	dataReady, 1
  59              	dataReady:
  60 000a 00       		.space	1
  61              		.global	adcVolts
  62 000b 00       		.align	2
  63              		.type	adcVolts, %object
  64              		.size	adcVolts, 4
  65              	adcVolts:
  66 000c 00000000 		.space	4
  67              		.global	measureADC
  68              		.align	2
  69              		.type	measureADC, %object
  70              		.size	measureADC, 4
  71              	measureADC:
  72 0010 00000000 		.space	4
  73              		.global	adcValue
  74              		.align	2
  75              		.type	adcValue, %object
  76              		.size	adcValue, 4
  77              	adcValue:
  78 0014 00000000 		.space	4
  79              		.global	signedValue
  80              		.align	2
  81              		.type	signedValue, %object
  82              		.size	signedValue, 4
  83              	signedValue:
  84 0018 00000000 		.space	4
  85              		.section	.text.ADC_ISR_RESET,"ax",%progbits
  86              		.align	2
  87              		.global	ADC_ISR_RESET
  88              		.thumb
  89              		.thumb_func
  90              		.type	ADC_ISR_RESET, %function
  91              	ADC_ISR_RESET:
  92              	.LFB64:
  93              		.file 1 "main.c"
   1:main.c        **** /*********************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Version 1
   4:main.c        **** *
   5:main.c        **** * Description: Updated version for chronoamperometric testing
   6:main.c        **** *
   7:main.c        **** **********************************************************************************
   8:main.c        **** * Some parts Copyright Highland Biosciences Ltd., Scotland
   9:main.c        **** * Some parts Copyright Naresuan University, Phitsanulok Thailand
  10:main.c        **** * Released under Creative Commons Attribution-ShareAlike  3.0 (CC BY-SA 3.0 US)
  11:main.c        **** *
  12:main.c        **** * Refactored Aug 8, 2024
  13:main.c        **** *
  14:main.c        **** * PSoC-Potentiostat Commands
  15:main.c        **** * The following are the inputs commands the device will take, all inputs are inputted as ASCII stri
  16:main.c        **** * 'I' - Identifies the device, will respond through the USB
  17:main.c        **** * "L|X" - Set electrode configuration to 2 or 3 electrodes. X=0 is 2 electrodes, 1=3 electrodes
  18:main.c        **** * "M|XXXX|YYYY" - Run an amperometry experiment. You need to start to read the data the device will
  19:main.c        **** * 'B' - Calibrate the ADC and TIA signal chain.
  20:main.c        **** * "T|XXXXX" - set the period value of the PWM used as a timer that starts the isrs to change the DA
  21:main.c        **** * "C|XXXXX" - set the compare value of the PWM used as a timer that sets when the DAC changes compa
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 3


  22:main.c        **** * 'X' - Reset the device. Disable all isrs and put the hardware to sleep.
  23:main.c        **** * "D|XXX" - Set the voltage control 8 bit DAC. XXX is the value to put in the DAC
  24:main.c        **** * 'H' - Wake up all the hardware, enable All
  25:main.c        **** *********************************************************************************/
  26:main.c        **** 
  27:main.c        **** #include <main.h>
  28:main.c        **** #include <helper_functions.h>
  29:main.c        **** 
  30:main.c        **** 
  31:main.c        **** #if defined (__GNUC__)
  32:main.c        ****     /* Add an explicit reference to the floating point printf library */
  33:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  34:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  35:main.c        ****     asm (".global _printf_float");
  36:main.c        **** #endif
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** uint8_t RX_Data[USBUART_BUFFER_SIZE];
  40:main.c        **** uint8_t TX_Data[USBUART_BUFFER_SIZE];
  41:main.c        **** 
  42:main.c        **** uint8_t  LCD_str_top[MAX_LCD_BYTES];                       // buffer for LCD screen, make it extra 
  43:main.c        **** uint8_t  LCD_str_bot[MAX_LCD_BYTES];  
  44:main.c        **** 
  45:main.c        **** uint8_t TIA_offset;
  46:main.c        **** uint8_t TIA_resistor_value_index;
  47:main.c        **** uint8_t ADC_buffer_index;
  48:main.c        **** uint8_t ADC_config;
  49:main.c        **** 
  50:main.c        **** 
  51:main.c        **** int16_t voltage = 0;
  52:main.c        **** float current = 0;
  53:main.c        **** 
  54:main.c        **** uint8_t dac_Volts = 0;
  55:main.c        **** uint8_t conversionCount = 0;
  56:main.c        **** uint8_t dataReady = 0;
  57:main.c        **** 
  58:main.c        **** float adcVolts = 0;
  59:main.c        **** int32_t  measureADC = 0;
  60:main.c        **** int32_t adcValue = 0;
  61:main.c        **** int32_t  signedValue = 0 ;
  62:main.c        **** 
  63:main.c        **** 
  64:main.c        **** // so this is called by PWM1 every 250mS
  65:main.c        **** CY_ISR(ADC_ISR_RESET)
  66:main.c        **** {
  94              		.loc 1 66 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
  67:main.c        ****     conversionCount = 0;
 104              		.loc 1 67 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 4


 105 0004 044B     		ldr	r3, .L2
 106 0006 0022     		movs	r2, #0
 107 0008 1A70     		strb	r2, [r3]
  68:main.c        ****     measureADC = 0;
 108              		.loc 1 68 0
 109 000a 044B     		ldr	r3, .L2+4
 110 000c 0022     		movs	r2, #0
 111 000e 1A60     		str	r2, [r3]
  69:main.c        **** }
 112              		.loc 1 69 0
 113 0010 00BF     		nop
 114 0012 BD46     		mov	sp, r7
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0014 80BC     		pop	{r7}
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 0016 7047     		bx	lr
 121              	.L3:
 122              		.align	2
 123              	.L2:
 124 0018 00000000 		.word	conversionCount
 125 001c 00000000 		.word	measureADC
 126              		.cfi_endproc
 127              	.LFE64:
 128              		.size	ADC_ISR_RESET, .-ADC_ISR_RESET
 129              		.section	.text.ADC_ISR,"ax",%progbits
 130              		.align	2
 131              		.global	ADC_ISR
 132              		.thumb
 133              		.thumb_func
 134              		.type	ADC_ISR, %function
 135              	ADC_ISR:
 136              	.LFB65:
  70:main.c        **** 
  71:main.c        **** CY_ISR(ADC_ISR)
  72:main.c        **** {
 137              		.loc 1 72 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
  73:main.c        ****     if (conversionCount < NUM_CONVERSIONS)    
 149              		.loc 1 73 0
 150 0006 234B     		ldr	r3, .L11
 151 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 152 000a 032B     		cmp	r3, #3
 153 000c 30D8     		bhi	.L5
  74:main.c        ****     {
  75:main.c        ****        if (ADC_DelSig_IsEndConversion( ADC_DelSig_WAIT_FOR_RESULT))
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 5


 154              		.loc 1 75 0
 155 000e 0020     		movs	r0, #0
 156 0010 FFF7FEFF 		bl	ADC_DelSig_IsEndConversion
 157 0014 0346     		mov	r3, r0
 158 0016 002B     		cmp	r3, #0
 159 0018 37D0     		beq	.L10
  76:main.c        ****       {
  77:main.c        ****         adcValue = ADC_DelSig_GetResult32() & 0xFFFFF ;
 160              		.loc 1 77 0
 161 001a FFF7FEFF 		bl	ADC_DelSig_GetResult32
 162 001e 0346     		mov	r3, r0
 163 0020 C3F31303 		ubfx	r3, r3, #0, #20
 164 0024 1C4A     		ldr	r2, .L11+4
 165 0026 1360     		str	r3, [r2]
  78:main.c        **** 
  79:main.c        ****         if (adcValue & 0x80000) 
 166              		.loc 1 79 0
 167 0028 1B4B     		ldr	r3, .L11+4
 168 002a 1B68     		ldr	r3, [r3]
 169 002c 03F40023 		and	r3, r3, #524288
 170 0030 002B     		cmp	r3, #0
 171 0032 0ED0     		beq	.L7
 172              	.LBB2:
  80:main.c        ****                  {
  81:main.c        ****                    int32_t value = (int32_t)(adcValue | 0xFFF00000);
 173              		.loc 1 81 0
 174 0034 184B     		ldr	r3, .L11+4
 175 0036 1B68     		ldr	r3, [r3]
 176 0038 6FEA0333 		mvn	r3, r3, lsl #12
 177 003c 6FEA1333 		mvn	r3, r3, lsr #12
 178 0040 7B60     		str	r3, [r7, #4]
  82:main.c        ****                    int32_t invertedValue = ~value;
 179              		.loc 1 82 0
 180 0042 7B68     		ldr	r3, [r7, #4]
 181 0044 DB43     		mvns	r3, r3
 182 0046 3B60     		str	r3, [r7]
  83:main.c        ****                 
  84:main.c        ****                 signedValue = -(invertedValue + 1);
 183              		.loc 1 84 0
 184 0048 3B68     		ldr	r3, [r7]
 185 004a DB43     		mvns	r3, r3
 186 004c 134A     		ldr	r2, .L11+8
 187 004e 1360     		str	r3, [r2]
 188              	.LBE2:
 189 0050 03E0     		b	.L8
 190              	.L7:
  85:main.c        ****      
  86:main.c        ****                  } 
  87:main.c        ****                      else 
  88:main.c        ****                  {
  89:main.c        ****                      signedValue = (int32_t)adcValue;
 191              		.loc 1 89 0
 192 0052 114B     		ldr	r3, .L11+4
 193 0054 1B68     		ldr	r3, [r3]
 194 0056 114A     		ldr	r2, .L11+8
 195 0058 1360     		str	r3, [r2]
 196              	.L8:
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 6


  90:main.c        ****                  }
  91:main.c        ****            
  92:main.c        ****             measureADC = signedValue;     
 197              		.loc 1 92 0
 198 005a 104B     		ldr	r3, .L11+8
 199 005c 1B68     		ldr	r3, [r3]
 200 005e 104A     		ldr	r2, .L11+12
 201 0060 1360     		str	r3, [r2]
  93:main.c        ****         
  94:main.c        ****             conversionCount++;
 202              		.loc 1 94 0
 203 0062 0C4B     		ldr	r3, .L11
 204 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205 0066 0133     		adds	r3, r3, #1
 206 0068 DAB2     		uxtb	r2, r3
 207 006a 0A4B     		ldr	r3, .L11
 208 006c 1A70     		strb	r2, [r3]
  95:main.c        ****       }
  96:main.c        ****     }
  97:main.c        ****     else
  98:main.c        ****     {
  99:main.c        ****         if (conversionCount == NUM_CONVERSIONS)
 100:main.c        ****         {           
 101:main.c        ****     
 102:main.c        ****             dataReady = 1;
 103:main.c        ****                         
 104:main.c        ****             conversionCount++;
 105:main.c        ****         }
 106:main.c        ****         else
 107:main.c        ****         {
 108:main.c        ****             /* do nothing */    
 109:main.c        ****         }          
 110:main.c        ****     }    
 111:main.c        **** }
 209              		.loc 1 111 0
 210 006e 0CE0     		b	.L10
 211              	.L5:
  99:main.c        ****         {           
 212              		.loc 1 99 0
 213 0070 084B     		ldr	r3, .L11
 214 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 0074 042B     		cmp	r3, #4
 216 0076 08D1     		bne	.L10
 102:main.c        ****                         
 217              		.loc 1 102 0
 218 0078 0A4B     		ldr	r3, .L11+16
 219 007a 0122     		movs	r2, #1
 220 007c 1A70     		strb	r2, [r3]
 104:main.c        ****         }
 221              		.loc 1 104 0
 222 007e 054B     		ldr	r3, .L11
 223 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 0082 0133     		adds	r3, r3, #1
 225 0084 DAB2     		uxtb	r2, r3
 226 0086 034B     		ldr	r3, .L11
 227 0088 1A70     		strb	r2, [r3]
 228              	.L10:
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 7


 229              		.loc 1 111 0
 230 008a 00BF     		nop
 231 008c 0837     		adds	r7, r7, #8
 232              		.cfi_def_cfa_offset 8
 233 008e BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 0090 80BD     		pop	{r7, pc}
 237              	.L12:
 238 0092 00BF     		.align	2
 239              	.L11:
 240 0094 00000000 		.word	conversionCount
 241 0098 00000000 		.word	adcValue
 242 009c 00000000 		.word	signedValue
 243 00a0 00000000 		.word	measureADC
 244 00a4 00000000 		.word	dataReady
 245              		.cfi_endproc
 246              	.LFE65:
 247              		.size	ADC_ISR, .-ADC_ISR
 248              		.section	.rodata
 249              		.align	2
 250              	.LC0:
 251 0000 563D2025 		.ascii	"V= %d\000"
 251      6400
 252 0006 0000     		.align	2
 253              	.LC1:
 254 0008 413D2025 		.ascii	"A= %d \000"
 254      642000
 255 000f 00       		.align	2
 256              	.LC2:
 257 0010 25642C25 		.ascii	"%d,%d\000"
 257      6400
 258              		.section	.text.main,"ax",%progbits
 259              		.align	2
 260              		.global	main
 261              		.thumb
 262              		.thumb_func
 263              		.type	main, %function
 264              	main:
 265              	.LFB66:
 112:main.c        ****    
 113:main.c        **** 
 114:main.c        **** int main() {
 266              		.loc 1 114 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 84B0     		sub	sp, sp, #16
 275              		.cfi_def_cfa_offset 24
 276 0004 02AF     		add	r7, sp, #8
 277              		.cfi_def_cfa 7, 16
 115:main.c        ****        
 116:main.c        ****     LCD_Start();
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 8


 278              		.loc 1 116 0
 279 0006 FFF7FEFF 		bl	LCD_Start
 117:main.c        ****     
 118:main.c        ****     // Enable global interrupts
 119:main.c        ****     CyGlobalIntEnable;   
 280              		.loc 1 119 0
 281              		.syntax unified
 282              	@ 119 "main.c" 1
 283 000a 62B6     		CPSIE   i
 284              	@ 0 "" 2
 120:main.c        ****      
 121:main.c        ****     /* Start USBFS operation with 5-V operation. */
 122:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 285              		.loc 1 122 0
 286              		.thumb
 287              		.syntax unified
 288 000c 0121     		movs	r1, #1
 289 000e 0020     		movs	r0, #0
 290 0010 FFF7FEFF 		bl	USBUART_Start
 123:main.c        ****     
 124:main.c        ****     /* initialise the system */
 125:main.c        ****     helper_HardwareInit();  
 291              		.loc 1 125 0
 292 0014 FFF7FEFF 		bl	helper_HardwareInit
 126:main.c        ****     
 127:main.c        ****     /* Safe Default Settings */
 128:main.c        ****     AMux_electrode_Start();
 293              		.loc 1 128 0
 294 0018 FFF7FEFF 		bl	AMux_electrode_Start
 129:main.c        ****     AMux_electrode_Select(TWO_ELECTRODE_CONFIG);  
 295              		.loc 1 129 0
 296 001c 0020     		movs	r0, #0
 297 001e FFF7FEFF 		bl	AMux_electrode_FastSelect
 130:main.c        ****         
 131:main.c        ****     AMux_TIA_input_Start();
 298              		.loc 1 131 0
 299 0022 FFF7FEFF 		bl	AMux_TIA_input_Start
 132:main.c        ****     AMux_TIA_input_Select(AMux_TIA_working_electrode_ch);   
 300              		.loc 1 132 0
 301 0026 0120     		movs	r0, #1
 302 0028 FFF7FEFF 		bl	AMux_TIA_input_FastSelect
 133:main.c        ****     
 134:main.c        ****     ADC_buffer_index = 1;
 303              		.loc 1 134 0
 304 002c 924B     		ldr	r3, .L36
 305 002e 0122     		movs	r2, #1
 306 0030 1A70     		strb	r2, [r3]
 135:main.c        ****     ADC_config = 1;
 307              		.loc 1 135 0
 308 0032 924B     		ldr	r3, .L36+4
 309 0034 0122     		movs	r2, #1
 310 0036 1A70     		strb	r2, [r3]
 136:main.c        ****     TIA_resistor_value_index = 0;
 311              		.loc 1 136 0
 312 0038 914B     		ldr	r3, .L36+8
 313 003a 0022     		movs	r2, #0
 314 003c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 9


 137:main.c        ****     
 138:main.c        ****     /* enable the system ready to begin measurements */
 139:main.c        ****     helper_HardwareEnable(); 
 315              		.loc 1 139 0
 316 003e FFF7FEFF 		bl	helper_HardwareEnable
 140:main.c        ****     
 141:main.c        ****     TIA_offset = DAC_OFFSET;
 317              		.loc 1 141 0
 318 0042 904B     		ldr	r3, .L36+12
 319 0044 8022     		movs	r2, #128
 320 0046 1A70     		strb	r2, [r3]
 142:main.c        ****     adc_VDAC_Setvalue(TIA_offset);
 321              		.loc 1 142 0
 322 0048 8E4B     		ldr	r3, .L36+12
 323 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 324 004c 1846     		mov	r0, r3
 325 004e FFF7FEFF 		bl	adc_VDAC_Setvalue
 143:main.c        ****         
 144:main.c        ****     TIA_SetResFB(TIA_resistor_value_index);
 326              		.loc 1 144 0
 327 0052 8B4B     		ldr	r3, .L36+8
 328 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0056 1846     		mov	r0, r3
 330 0058 FFF7FEFF 		bl	TIA_SetResFB
 145:main.c        ****         
 146:main.c        ****     dac_Volts = VIRTUAL_GROUND;
 331              		.loc 1 146 0
 332 005c 8A4B     		ldr	r3, .L36+16
 333 005e 8022     		movs	r2, #128
 334 0060 1A70     		strb	r2, [r3]
 147:main.c        ****     dac_Setvalue(dac_Volts); 
 335              		.loc 1 147 0
 336 0062 894B     		ldr	r3, .L36+16
 337 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 0066 1846     		mov	r0, r3
 339 0068 FFF7FEFF 		bl	dac_Setvalue
 148:main.c        ****     
 149:main.c        ****     voltage = 0;  
 340              		.loc 1 149 0
 341 006c 874B     		ldr	r3, .L36+20
 342 006e 0022     		movs	r2, #0
 343 0070 1A80     		strh	r2, [r3]	@ movhi
 150:main.c        ****   
 151:main.c        ****     isr_adc_reset_StartEx(ADC_ISR_RESET);
 344              		.loc 1 151 0
 345 0072 8748     		ldr	r0, .L36+24
 346 0074 FFF7FEFF 		bl	isr_adc_reset_StartEx
 152:main.c        ****     isr_adc_StartEx(ADC_ISR);
 347              		.loc 1 152 0
 348 0078 8648     		ldr	r0, .L36+28
 349 007a FFF7FEFF 		bl	isr_adc_StartEx
 153:main.c        ****     
 154:main.c        ****   
 155:main.c        ****     ADC_DelSig_StartConvert(); // Start continuous conversions
 350              		.loc 1 155 0
 351 007e FFF7FEFF 		bl	ADC_DelSig_StartConvert
 352              	.L34:
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 10


 156:main.c        ****     
 157:main.c        ****     for(;;) 
 158:main.c        ****     {
 159:main.c        ****      
 160:main.c        ****         /* Host can send double SET_INTERFACE request. */
 161:main.c        ****         if (0u != USBUART_IsConfigurationChanged())
 353              		.loc 1 161 0
 354 0082 FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 355 0086 0346     		mov	r3, r0
 356 0088 002B     		cmp	r3, #0
 357 008a 06D0     		beq	.L14
 162:main.c        ****         {
 163:main.c        ****             /* Initialize IN endpoints when device is configured. */
 164:main.c        ****             if (0u != USBUART_GetConfiguration())
 358              		.loc 1 164 0
 359 008c FFF7FEFF 		bl	USBUART_GetConfiguration
 360 0090 0346     		mov	r3, r0
 361 0092 002B     		cmp	r3, #0
 362 0094 01D0     		beq	.L14
 165:main.c        ****             {
 166:main.c        ****                 /* Enumeration is done, enable OUT endpoint to receive data from host. */
 167:main.c        ****                 USBUART_CDC_Init();
 363              		.loc 1 167 0
 364 0096 FFF7FEFF 		bl	USBUART_CDC_Init
 365              	.L14:
 168:main.c        ****             }
 169:main.c        ****         }
 170:main.c        ****          
 171:main.c        ****         
 172:main.c        ****         /* Only service USB CDC when device is connected. */
 173:main.c        ****         if (0u != USBUART_GetConfiguration())
 366              		.loc 1 173 0
 367 009a FFF7FEFF 		bl	USBUART_GetConfiguration
 368 009e 0346     		mov	r3, r0
 369 00a0 002B     		cmp	r3, #0
 370 00a2 EED0     		beq	.L34
 174:main.c        ****         {
 175:main.c        ****             /* Check for input data to process. */
 176:main.c        ****             if (0u != USBUART_DataIsReady())
 371              		.loc 1 176 0
 372 00a4 FFF7FEFF 		bl	USBUART_DataIsReady
 373 00a8 0346     		mov	r3, r0
 374 00aa 002B     		cmp	r3, #0
 375 00ac 00F0A580 		beq	.L16
 376              	.LBB3:
 177:main.c        ****             {
 178:main.c        ****                 /* Read data into the buffer and re-enable OUT endpoint. */        
 179:main.c        ****                 helper_ClrRx();
 377              		.loc 1 179 0
 378 00b0 FFF7FEFF 		bl	helper_ClrRx
 180:main.c        ****                 
 181:main.c        ****                 uint16 count = USBUART_GetAll(RX_Data);              
 379              		.loc 1 181 0
 380 00b4 7848     		ldr	r0, .L36+32
 381 00b6 FFF7FEFF 		bl	USBUART_GetAll
 382 00ba 0346     		mov	r3, r0
 383 00bc FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 11


 182:main.c        ****                                                
 183:main.c        ****                 if (0u != count) 
 384              		.loc 1 183 0
 385 00be FB88     		ldrh	r3, [r7, #6]
 386 00c0 002B     		cmp	r3, #0
 387 00c2 DED0     		beq	.L34
 184:main.c        ****                 {  
 185:main.c        ****                     /* Wait until component is ready to send data to host. */
 186:main.c        ****                     while (0u == USBUART_CDCIsReady())
 388              		.loc 1 186 0
 389 00c4 00BF     		nop
 390              	.L18:
 391              		.loc 1 186 0 is_stmt 0 discriminator 1
 392 00c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 393 00ca 0346     		mov	r3, r0
 394 00cc 002B     		cmp	r3, #0
 395 00ce FAD0     		beq	.L18
 187:main.c        ****                     {
 188:main.c        ****                     }
 189:main.c        ****                                        
 190:main.c        ****                     /* Echo back */
 191:main.c        ****                     USBUART_PutData(RX_Data, count);
 396              		.loc 1 191 0 is_stmt 1
 397 00d0 FB88     		ldrh	r3, [r7, #6]
 398 00d2 1946     		mov	r1, r3
 399 00d4 7048     		ldr	r0, .L36+32
 400 00d6 FFF7FEFF 		bl	USBUART_PutData
 192:main.c        ****                   
 193:main.c        ****                      /* Terminate with Null */
 194:main.c        ****                     if (USBUART_BUFFER_SIZE == count)
 401              		.loc 1 194 0
 402 00da FB88     		ldrh	r3, [r7, #6]
 403 00dc 402B     		cmp	r3, #64
 404 00de 09D1     		bne	.L35
 195:main.c        ****                     {
 196:main.c        ****                         /* Wait until component is ready to send data to PC. */
 197:main.c        ****                         while (0u == USBUART_CDCIsReady())
 405              		.loc 1 197 0
 406 00e0 00BF     		nop
 407              	.L20:
 408              		.loc 1 197 0 is_stmt 0 discriminator 1
 409 00e2 FFF7FEFF 		bl	USBUART_CDCIsReady
 410 00e6 0346     		mov	r3, r0
 411 00e8 002B     		cmp	r3, #0
 412 00ea FAD0     		beq	.L20
 198:main.c        ****                         {
 199:main.c        ****                         }
 200:main.c        **** 
 201:main.c        ****                         /* Send zero-length packet to PC. */
 202:main.c        ****                         USBUART_PutData(NULL, 0u);
 413              		.loc 1 202 0 is_stmt 1
 414 00ec 0021     		movs	r1, #0
 415 00ee 0020     		movs	r0, #0
 416 00f0 FFF7FEFF 		bl	USBUART_PutData
 417              	.L35:
 203:main.c        ****                     }
 204:main.c        ****                     
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 12


 205:main.c        ****                     /* Wait until component is ready to send data to PC. */
 206:main.c        ****                     while (0u == USBUART_CDCIsReady())
 418              		.loc 1 206 0
 419 00f4 00BF     		nop
 420              	.L21:
 421              		.loc 1 206 0 is_stmt 0 discriminator 1
 422 00f6 FFF7FEFF 		bl	USBUART_CDCIsReady
 423 00fa 0346     		mov	r3, r0
 424 00fc 002B     		cmp	r3, #0
 425 00fe FAD0     		beq	.L21
 207:main.c        ****                     {
 208:main.c        ****                     }
 209:main.c        ****                         
 210:main.c        ****                     USBUART_PutCRLF();
 426              		.loc 1 210 0 is_stmt 1
 427 0100 FFF7FEFF 		bl	USBUART_PutCRLF
 211:main.c        ****                    
 212:main.c        ****                    switch (RX_Data[0]) {                    // select case based upon the first 'L'
 428              		.loc 1 212 0
 429 0104 644B     		ldr	r3, .L36+32
 430 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0108 423B     		subs	r3, r3, #66
 432 010a 162B     		cmp	r3, #22
 433 010c B9D8     		bhi	.L34
 434 010e 01A2     		adr	r2, .L23
 435 0110 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 436              		.p2align 2
 437              	.L23:
 438 0114 71010000 		.word	.L22+1
 439 0118 83000000 		.word	.L34+1
 440 011c A3010000 		.word	.L24+1
 441 0120 77010000 		.word	.L25+1
 442 0124 7F010000 		.word	.L26+1
 443 0128 87010000 		.word	.L27+1
 444 012c F3010000 		.word	.L28+1
 445 0130 95010000 		.word	.L29+1
 446 0134 D3010000 		.word	.L30+1
 447 0138 83000000 		.word	.L34+1
 448 013c 9B010000 		.word	.L31+1
 449 0140 ED010000 		.word	.L32+1
 450 0144 83000000 		.word	.L34+1
 451 0148 83000000 		.word	.L34+1
 452 014c 83000000 		.word	.L34+1
 453 0150 83000000 		.word	.L34+1
 454 0154 83000000 		.word	.L34+1
 455 0158 83000000 		.word	.L34+1
 456 015c 83000000 		.word	.L34+1
 457 0160 83000000 		.word	.L34+1
 458 0164 83000000 		.word	.L34+1
 459 0168 83000000 		.word	.L34+1
 460 016c 8F010000 		.word	.L33+1
 461              		.p2align 1
 462              	.L22:
 213:main.c        ****                 
 214:main.c        ****                     case CALIBRATE_TIA_ADC: ;               // 'B' calibrate the TIA / ADC current 
 215:main.c        ****                         calibrate_TIA();
 463              		.loc 1 215 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 13


 464 0170 FFF7FEFF 		bl	calibrate_TIA
 216:main.c        ****                         break;
 465              		.loc 1 216 0
 466 0174 7EE0     		b	.L15
 467              	.L25:
 217:main.c        ****                                
 218:main.c        ****                     case SET_ADC_CONFIG: ;                  // 'E' select one of the preset-configs
 219:main.c        ****                         user_setup_ADC_CONFIG(RX_Data);
 468              		.loc 1 219 0
 469 0176 4848     		ldr	r0, .L36+32
 470 0178 FFF7FEFF 		bl	user_setup_ADC_CONFIG
 220:main.c        ****                         break;
 471              		.loc 1 220 0
 472 017c 7AE0     		b	.L15
 473              	.L26:
 221:main.c        ****                         
 222:main.c        ****                     case TIA_RESISTOR: ;                    //  'F' select the TIA resistor value (
 223:main.c        ****                         user_setup_TIA_RESISTOR(RX_Data);
 474              		.loc 1 223 0
 475 017e 4648     		ldr	r0, .L36+32
 476 0180 FFF7FEFF 		bl	user_setup_TIA_RESISTOR
 224:main.c        ****                         break;
 477              		.loc 1 224 0
 478 0184 76E0     		b	.L15
 479              	.L27:
 225:main.c        ****                                                 
 226:main.c        ****                     case ADC_BUFFER_GAIN: ;                 //  'G'  
 227:main.c        ****                         user_setup_ADC_BUFFER_GAIN(RX_Data);      
 480              		.loc 1 227 0
 481 0186 4448     		ldr	r0, .L36+32
 482 0188 FFF7FEFF 		bl	user_setup_ADC_BUFFER_GAIN
 228:main.c        ****                         break;
 483              		.loc 1 228 0
 484 018c 72E0     		b	.L15
 485              	.L33:
 229:main.c        **** 
 230:main.c        ****                     case RESET_DEVICE: ;                    // 'X' reset the device by disableing i
 231:main.c        ****                         user_reset_device();
 486              		.loc 1 231 0
 487 018e FFF7FEFF 		bl	user_reset_device
 232:main.c        ****                         break;
 488              		.loc 1 232 0
 489 0192 6FE0     		b	.L15
 490              	.L29:
 233:main.c        ****                 
 234:main.c        ****                     case DEVICE_IDENTIFY: ;                 // 'I' identify the device 
 235:main.c        ****                         user_identify();
 491              		.loc 1 235 0
 492 0194 FFF7FEFF 		bl	user_identify
 236:main.c        ****                         break;
 493              		.loc 1 236 0
 494 0198 6CE0     		b	.L15
 495              	.L31:
 237:main.c        ****                 
 238:main.c        ****                     case CHANGE_NUMBER_ELECTRODES: ;        // 'L' User wants to change the electro
 239:main.c        ****                         user_setup_electrode(RX_Data);
 496              		.loc 1 239 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 14


 497 019a 3F48     		ldr	r0, .L36+32
 498 019c FFF7FEFF 		bl	user_setup_electrode
 240:main.c        ****                         break;
 499              		.loc 1 240 0
 500 01a0 68E0     		b	.L15
 501              	.L24:
 241:main.c        ****             
 242:main.c        ****                     case SET_DAC_VALUE: ;                   // 'D' set the dac value, based on the 
 243:main.c        ****                         dac_Volts = dac_Volts2adc(RX_Data);
 502              		.loc 1 243 0
 503 01a2 3D48     		ldr	r0, .L36+32
 504 01a4 FFF7FEFF 		bl	dac_Volts2adc
 505 01a8 0346     		mov	r3, r0
 506 01aa 1A46     		mov	r2, r3
 507 01ac 364B     		ldr	r3, .L36+16
 508 01ae 1A70     		strb	r2, [r3]
 244:main.c        ****                         dac_Setvalue(dac_Volts);   
 509              		.loc 1 244 0
 510 01b0 354B     		ldr	r3, .L36+16
 511 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 01b4 1846     		mov	r0, r3
 513 01b6 FFF7FEFF 		bl	dac_Setvalue
 245:main.c        ****                         voltage = (int16_t)(dac_Volts-DAC_OFFSET)*DAC_RESOLUTION;           
 514              		.loc 1 245 0
 515 01ba 334B     		ldr	r3, .L36+16
 516 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517 01be 9BB2     		uxth	r3, r3
 518 01c0 03F57863 		add	r3, r3, #3968
 519 01c4 9BB2     		uxth	r3, r3
 520 01c6 1B01     		lsls	r3, r3, #4
 521 01c8 9BB2     		uxth	r3, r3
 522 01ca 1AB2     		sxth	r2, r3
 523 01cc 2F4B     		ldr	r3, .L36+20
 524 01ce 1A80     		strh	r2, [r3]	@ movhi
 246:main.c        ****                         break;
 525              		.loc 1 246 0
 526 01d0 50E0     		b	.L15
 527              	.L30:
 247:main.c        ****                 
 248:main.c        ****                     case SET_VDAC_OFFSET: ;                 // 'J' set the VDAC value 
 249:main.c        ****                         TIA_offset = adc_VDAC_offset(RX_Data);                 
 528              		.loc 1 249 0
 529 01d2 3148     		ldr	r0, .L36+32
 530 01d4 FFF7FEFF 		bl	adc_VDAC_offset
 531 01d8 0346     		mov	r3, r0
 532 01da 1A46     		mov	r2, r3
 533 01dc 294B     		ldr	r3, .L36+12
 534 01de 1A70     		strb	r2, [r3]
 250:main.c        ****                         adc_VDAC_Setvalue(TIA_offset);
 535              		.loc 1 250 0
 536 01e0 284B     		ldr	r3, .L36+12
 537 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 538 01e4 1846     		mov	r0, r3
 539 01e6 FFF7FEFF 		bl	adc_VDAC_Setvalue
 251:main.c        ****                         break;
 540              		.loc 1 251 0
 541 01ea 43E0     		b	.L15
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 15


 542              	.L32:
 252:main.c        ****                        
 253:main.c        ****                     case STOP_HARDWARE: ;                   // 'M' stop data acquisition
 254:main.c        ****                         helper_HardwareSleep();                 // Sleep the hardware
 543              		.loc 1 254 0
 544 01ec FFF7FEFF 		bl	helper_HardwareSleep
 255:main.c        ****                         break;
 545              		.loc 1 255 0
 546 01f0 40E0     		b	.L15
 547              	.L28:
 256:main.c        ****                 
 257:main.c        ****                     case START_HARDWARE: ;                  // 'H' Start taking measurements from t
 258:main.c        ****                         helper_HardwareWakeup();                // wake the hardware
 548              		.loc 1 258 0
 549 01f2 FFF7FEFF 		bl	helper_HardwareWakeup
 259:main.c        ****                         break;
 550              		.loc 1 259 0
 551 01f6 00BF     		nop
 552 01f8 3CE0     		b	.L15
 553              	.L16:
 554              	.LBE3:
 260:main.c        ****                     }    
 261:main.c        ****                                       // end of switch statment                }
 262:main.c        ****                 }
 263:main.c        ****             }
 264:main.c        ****             else
 265:main.c        ****             {   
 266:main.c        ****                 if (dataReady ==1) 
 555              		.loc 1 266 0
 556 01fa 284B     		ldr	r3, .L36+36
 557 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 558 01fe 012B     		cmp	r3, #1
 559 0200 7FF43FAF 		bne	.L34
 267:main.c        ****                 {
 268:main.c        ****                     /* update the LCD display */
 269:main.c        ****                     LCD_ClearDisplay();
 560              		.loc 1 269 0
 561 0204 0120     		movs	r0, #1
 562 0206 FFF7FEFF 		bl	LCD_WriteControl
 270:main.c        ****                     helper_WipeLCD();
 563              		.loc 1 270 0
 564 020a FFF7FEFF 		bl	helper_WipeLCD
 271:main.c        ****                     
 272:main.c        ****                     /* update line 1 */
 273:main.c        ****                     LCD_Position(0u, 0u);
 565              		.loc 1 273 0
 566 020e 0021     		movs	r1, #0
 567 0210 0020     		movs	r0, #0
 568 0212 FFF7FEFF 		bl	LCD_Position
 274:main.c        ****                     snprintf((char *)LCD_str_top,MAX_LCD_BYTES, "V= %d", (int)voltage);
 569              		.loc 1 274 0
 570 0216 1D4B     		ldr	r3, .L36+20
 571 0218 B3F90030 		ldrsh	r3, [r3]
 572 021c 204A     		ldr	r2, .L36+40
 573 021e 1021     		movs	r1, #16
 574 0220 2048     		ldr	r0, .L36+44
 575 0222 FFF7FEFF 		bl	snprintf
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 16


 275:main.c        ****                     LCD_PrintString((const char*)LCD_str_top);                                     
 576              		.loc 1 275 0
 577 0226 1F48     		ldr	r0, .L36+44
 578 0228 FFF7FEFF 		bl	LCD_PrintString
 276:main.c        ****                  
 277:main.c        ****                     /* update line 2 */
 278:main.c        ****                     LCD_Position(1u, 0u);
 579              		.loc 1 278 0
 580 022c 0021     		movs	r1, #0
 581 022e 0120     		movs	r0, #1
 582 0230 FFF7FEFF 		bl	LCD_Position
 279:main.c        ****                     snprintf((char *)LCD_str_bot,MAX_LCD_BYTES, "A= %d ", (int) measureADC);
 583              		.loc 1 279 0
 584 0234 1C4B     		ldr	r3, .L36+48
 585 0236 1B68     		ldr	r3, [r3]
 586 0238 1C4A     		ldr	r2, .L36+52
 587 023a 1021     		movs	r1, #16
 588 023c 1C48     		ldr	r0, .L36+56
 589 023e FFF7FEFF 		bl	snprintf
 280:main.c        ****                     LCD_PrintString((const char*)LCD_str_bot);
 590              		.loc 1 280 0
 591 0242 1B48     		ldr	r0, .L36+56
 592 0244 FFF7FEFF 		bl	LCD_PrintString
 281:main.c        ****                                        
 282:main.c        ****                     /* Send out results to the USB Serial */
 283:main.c        ****                     helper_ClrTx();
 593              		.loc 1 283 0
 594 0248 FFF7FEFF 		bl	helper_ClrTx
 284:main.c        ****                     snprintf((char *)TX_Data, USBUART_BUFFER_SIZE, "%d,%d",(int)voltage, (int)measu
 595              		.loc 1 284 0
 596 024c 0F4B     		ldr	r3, .L36+20
 597 024e B3F90030 		ldrsh	r3, [r3]
 598 0252 1A46     		mov	r2, r3
 599 0254 144B     		ldr	r3, .L36+48
 600 0256 1B68     		ldr	r3, [r3]
 601 0258 0093     		str	r3, [sp]
 602 025a 1346     		mov	r3, r2
 603 025c 154A     		ldr	r2, .L36+60
 604 025e 4021     		movs	r1, #64
 605 0260 1548     		ldr	r0, .L36+64
 606 0262 FFF7FEFF 		bl	snprintf
 285:main.c        ****                     USB_send (TX_Data, USBUART_BUFFER_SIZE ) ;
 607              		.loc 1 285 0
 608 0266 4021     		movs	r1, #64
 609 0268 1348     		ldr	r0, .L36+64
 610 026a FFF7FEFF 		bl	USB_send
 286:main.c        ****                     
 287:main.c        ****                     dataReady =0;
 611              		.loc 1 287 0
 612 026e 0B4B     		ldr	r3, .L36+36
 613 0270 0022     		movs	r2, #0
 614 0272 1A70     		strb	r2, [r3]
 615              	.L15:
 288:main.c        ****                 }        
 289:main.c        ****             }
 290:main.c        ****         }
 291:main.c        ****     }                                                  
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 17


 616              		.loc 1 291 0 discriminator 1
 617 0274 05E7     		b	.L34
 618              	.L37:
 619 0276 00BF     		.align	2
 620              	.L36:
 621 0278 00000000 		.word	ADC_buffer_index
 622 027c 00000000 		.word	ADC_config
 623 0280 00000000 		.word	TIA_resistor_value_index
 624 0284 00000000 		.word	TIA_offset
 625 0288 00000000 		.word	dac_Volts
 626 028c 00000000 		.word	voltage
 627 0290 00000000 		.word	ADC_ISR_RESET
 628 0294 00000000 		.word	ADC_ISR
 629 0298 00000000 		.word	RX_Data
 630 029c 00000000 		.word	dataReady
 631 02a0 00000000 		.word	.LC0
 632 02a4 00000000 		.word	LCD_str_top
 633 02a8 00000000 		.word	measureADC
 634 02ac 08000000 		.word	.LC1
 635 02b0 00000000 		.word	LCD_str_bot
 636 02b4 10000000 		.word	.LC2
 637 02b8 00000000 		.word	TX_Data
 638              		.cfi_endproc
 639              	.LFE66:
 640              		.size	main, .-main
 641              		.text
 642              	.Letext0:
 643              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 644              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 645              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 646              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 647              		.file 6 "./globals.h"
 648              		.file 7 "./calibrate.h"
 649              		.section	.debug_info,"",%progbits
 650              	.Ldebug_info0:
 651 0000 2B030000 		.4byte	0x32b
 652 0004 0400     		.2byte	0x4
 653 0006 00000000 		.4byte	.Ldebug_abbrev0
 654 000a 04       		.byte	0x4
 655 000b 01       		.uleb128 0x1
 656 000c 0B020000 		.4byte	.LASF48
 657 0010 0C       		.byte	0xc
 658 0011 A7010000 		.4byte	.LASF49
 659 0015 B3010000 		.4byte	.LASF50
 660 0019 00000000 		.4byte	.Ldebug_ranges0+0
 661 001d 00000000 		.4byte	0
 662 0021 00000000 		.4byte	.Ldebug_line0
 663 0025 02       		.uleb128 0x2
 664 0026 01       		.byte	0x1
 665 0027 06       		.byte	0x6
 666 0028 F0020000 		.4byte	.LASF0
 667 002c 03       		.uleb128 0x3
 668 002d 10000000 		.4byte	.LASF2
 669 0031 02       		.byte	0x2
 670 0032 1D       		.byte	0x1d
 671 0033 37000000 		.4byte	0x37
 672 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 18


 673 0038 01       		.byte	0x1
 674 0039 08       		.byte	0x8
 675 003a 6D000000 		.4byte	.LASF1
 676 003e 03       		.uleb128 0x3
 677 003f 24000000 		.4byte	.LASF3
 678 0043 02       		.byte	0x2
 679 0044 29       		.byte	0x29
 680 0045 49000000 		.4byte	0x49
 681 0049 02       		.uleb128 0x2
 682 004a 02       		.byte	0x2
 683 004b 05       		.byte	0x5
 684 004c 4A000000 		.4byte	.LASF4
 685 0050 02       		.uleb128 0x2
 686 0051 02       		.byte	0x2
 687 0052 07       		.byte	0x7
 688 0053 9D000000 		.4byte	.LASF5
 689 0057 03       		.uleb128 0x3
 690 0058 34000000 		.4byte	.LASF6
 691 005c 02       		.byte	0x2
 692 005d 3F       		.byte	0x3f
 693 005e 62000000 		.4byte	0x62
 694 0062 02       		.uleb128 0x2
 695 0063 04       		.byte	0x4
 696 0064 05       		.byte	0x5
 697 0065 B9020000 		.4byte	.LASF7
 698 0069 02       		.uleb128 0x2
 699 006a 04       		.byte	0x4
 700 006b 07       		.byte	0x7
 701 006c 8B000000 		.4byte	.LASF8
 702 0070 02       		.uleb128 0x2
 703 0071 08       		.byte	0x8
 704 0072 05       		.byte	0x5
 705 0073 99010000 		.4byte	.LASF9
 706 0077 02       		.uleb128 0x2
 707 0078 08       		.byte	0x8
 708 0079 07       		.byte	0x7
 709 007a 4A010000 		.4byte	.LASF10
 710 007e 04       		.uleb128 0x4
 711 007f 04       		.byte	0x4
 712 0080 05       		.byte	0x5
 713 0081 696E7400 		.ascii	"int\000"
 714 0085 02       		.uleb128 0x2
 715 0086 04       		.byte	0x4
 716 0087 07       		.byte	0x7
 717 0088 3D010000 		.4byte	.LASF11
 718 008c 03       		.uleb128 0x3
 719 008d 61010000 		.4byte	.LASF12
 720 0091 03       		.byte	0x3
 721 0092 18       		.byte	0x18
 722 0093 2C000000 		.4byte	0x2c
 723 0097 03       		.uleb128 0x3
 724 0098 71010000 		.4byte	.LASF13
 725 009c 03       		.byte	0x3
 726 009d 20       		.byte	0x20
 727 009e 3E000000 		.4byte	0x3e
 728 00a2 03       		.uleb128 0x3
 729 00a3 88010000 		.4byte	.LASF14
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 19


 730 00a7 03       		.byte	0x3
 731 00a8 2C       		.byte	0x2c
 732 00a9 57000000 		.4byte	0x57
 733 00ad 05       		.uleb128 0x5
 734 00ae AB020000 		.4byte	.LASF15
 735 00b2 04       		.byte	0x4
 736 00b3 E901     		.2byte	0x1e9
 737 00b5 37000000 		.4byte	0x37
 738 00b9 05       		.uleb128 0x5
 739 00ba 31010000 		.4byte	.LASF16
 740 00be 04       		.byte	0x4
 741 00bf EA01     		.2byte	0x1ea
 742 00c1 50000000 		.4byte	0x50
 743 00c5 02       		.uleb128 0x2
 744 00c6 04       		.byte	0x4
 745 00c7 04       		.byte	0x4
 746 00c8 62000000 		.4byte	.LASF17
 747 00cc 02       		.uleb128 0x2
 748 00cd 08       		.byte	0x8
 749 00ce 04       		.byte	0x4
 750 00cf 79010000 		.4byte	.LASF18
 751 00d3 02       		.uleb128 0x2
 752 00d4 01       		.byte	0x1
 753 00d5 08       		.byte	0x8
 754 00d6 AE010000 		.4byte	.LASF19
 755 00da 02       		.uleb128 0x2
 756 00db 04       		.byte	0x4
 757 00dc 07       		.byte	0x7
 758 00dd 90010000 		.4byte	.LASF20
 759 00e1 02       		.uleb128 0x2
 760 00e2 08       		.byte	0x8
 761 00e3 04       		.byte	0x4
 762 00e4 E4020000 		.4byte	.LASF21
 763 00e8 06       		.uleb128 0x6
 764 00e9 BC000000 		.4byte	.LASF51
 765 00ed 14       		.byte	0x14
 766 00ee 07       		.byte	0x7
 767 00ef 1D       		.byte	0x1d
 768 00f0 0B010000 		.4byte	0x10b
 769 00f4 07       		.uleb128 0x7
 770 00f5 75736200 		.ascii	"usb\000"
 771 00f9 07       		.byte	0x7
 772 00fa 1E       		.byte	0x1e
 773 00fb 0B010000 		.4byte	0x10b
 774 00ff 08       		.uleb128 0x8
 775 0100 68000000 		.4byte	.LASF22
 776 0104 07       		.byte	0x7
 777 0105 1F       		.byte	0x1f
 778 0106 1B010000 		.4byte	0x11b
 779 010a 00       		.byte	0
 780 010b 09       		.uleb128 0x9
 781 010c 8C000000 		.4byte	0x8c
 782 0110 1B010000 		.4byte	0x11b
 783 0114 0A       		.uleb128 0xa
 784 0115 DA000000 		.4byte	0xda
 785 0119 13       		.byte	0x13
 786 011a 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 20


 787 011b 09       		.uleb128 0x9
 788 011c 97000000 		.4byte	0x97
 789 0120 2B010000 		.4byte	0x12b
 790 0124 0A       		.uleb128 0xa
 791 0125 DA000000 		.4byte	0xda
 792 0129 09       		.byte	0x9
 793 012a 00       		.byte	0
 794 012b 0B       		.uleb128 0xb
 795 012c 54000000 		.4byte	.LASF52
 796 0130 01       		.byte	0x1
 797 0131 41       		.byte	0x41
 798 0132 00000000 		.4byte	.LFB64
 799 0136 20000000 		.4byte	.LFE64-.LFB64
 800 013a 01       		.uleb128 0x1
 801 013b 9C       		.byte	0x9c
 802 013c 0C       		.uleb128 0xc
 803 013d 80010000 		.4byte	.LASF25
 804 0141 01       		.byte	0x1
 805 0142 47       		.byte	0x47
 806 0143 00000000 		.4byte	.LFB65
 807 0147 A8000000 		.4byte	.LFE65-.LFB65
 808 014b 01       		.uleb128 0x1
 809 014c 9C       		.byte	0x9c
 810 014d 78010000 		.4byte	0x178
 811 0151 0D       		.uleb128 0xd
 812 0152 34000000 		.4byte	.LBB2
 813 0156 1C000000 		.4byte	.LBE2-.LBB2
 814 015a 0E       		.uleb128 0xe
 815 015b 2E000000 		.4byte	.LASF23
 816 015f 01       		.byte	0x1
 817 0160 51       		.byte	0x51
 818 0161 A2000000 		.4byte	0xa2
 819 0165 02       		.uleb128 0x2
 820 0166 91       		.byte	0x91
 821 0167 74       		.sleb128 -12
 822 0168 0E       		.uleb128 0xe
 823 0169 06010000 		.4byte	.LASF24
 824 016d 01       		.byte	0x1
 825 016e 52       		.byte	0x52
 826 016f A2000000 		.4byte	0xa2
 827 0173 02       		.uleb128 0x2
 828 0174 91       		.byte	0x91
 829 0175 70       		.sleb128 -16
 830 0176 00       		.byte	0
 831 0177 00       		.byte	0
 832 0178 0F       		.uleb128 0xf
 833 0179 38010000 		.4byte	.LASF26
 834 017d 01       		.byte	0x1
 835 017e 72       		.byte	0x72
 836 017f 7E000000 		.4byte	0x7e
 837 0183 00000000 		.4byte	.LFB66
 838 0187 BC020000 		.4byte	.LFE66-.LFB66
 839 018b 01       		.uleb128 0x1
 840 018c 9C       		.byte	0x9c
 841 018d AA010000 		.4byte	0x1aa
 842 0191 0D       		.uleb128 0xd
 843 0192 B0000000 		.4byte	.LBB3
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 21


 844 0196 4A010000 		.4byte	.LBE3-.LBB3
 845 019a 0E       		.uleb128 0xe
 846 019b F0010000 		.4byte	.LASF27
 847 019f 01       		.byte	0x1
 848 01a0 B5       		.byte	0xb5
 849 01a1 B9000000 		.4byte	0xb9
 850 01a5 02       		.uleb128 0x2
 851 01a6 91       		.byte	0x91
 852 01a7 76       		.sleb128 -10
 853 01a8 00       		.byte	0
 854 01a9 00       		.byte	0
 855 01aa 10       		.uleb128 0x10
 856 01ab DD000000 		.4byte	.LASF28
 857 01af 05       		.byte	0x5
 858 01b0 1207     		.2byte	0x712
 859 01b2 B6010000 		.4byte	0x1b6
 860 01b6 11       		.uleb128 0x11
 861 01b7 A2000000 		.4byte	0xa2
 862 01bb 09       		.uleb128 0x9
 863 01bc AD000000 		.4byte	0xad
 864 01c0 CB010000 		.4byte	0x1cb
 865 01c4 0A       		.uleb128 0xa
 866 01c5 DA000000 		.4byte	0xda
 867 01c9 3F       		.byte	0x3f
 868 01ca 00       		.byte	0
 869 01cb 12       		.uleb128 0x12
 870 01cc A4020000 		.4byte	.LASF29
 871 01d0 06       		.byte	0x6
 872 01d1 5B       		.byte	0x5b
 873 01d2 BB010000 		.4byte	0x1bb
 874 01d6 05       		.uleb128 0x5
 875 01d7 03       		.byte	0x3
 876 01d8 00000000 		.4byte	buffer
 877 01dc 12       		.uleb128 0x12
 878 01dd D5000000 		.4byte	.LASF30
 879 01e1 01       		.byte	0x1
 880 01e2 33       		.byte	0x33
 881 01e3 97000000 		.4byte	0x97
 882 01e7 05       		.uleb128 0x5
 883 01e8 03       		.byte	0x3
 884 01e9 00000000 		.4byte	voltage
 885 01ed 12       		.uleb128 0x12
 886 01ee B1020000 		.4byte	.LASF31
 887 01f2 01       		.byte	0x1
 888 01f3 34       		.byte	0x34
 889 01f4 C5000000 		.4byte	0xc5
 890 01f8 05       		.uleb128 0x5
 891 01f9 03       		.byte	0x3
 892 01fa 00000000 		.4byte	current
 893 01fe 12       		.uleb128 0x12
 894 01ff 14010000 		.4byte	.LASF32
 895 0203 01       		.byte	0x1
 896 0204 2F       		.byte	0x2f
 897 0205 8C000000 		.4byte	0x8c
 898 0209 05       		.uleb128 0x5
 899 020a 03       		.byte	0x3
 900 020b 00000000 		.4byte	ADC_buffer_index
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 22


 901 020f 12       		.uleb128 0x12
 902 0210 F6010000 		.4byte	.LASF33
 903 0214 01       		.byte	0x1
 904 0215 30       		.byte	0x30
 905 0216 8C000000 		.4byte	0x8c
 906 021a 05       		.uleb128 0x5
 907 021b 03       		.byte	0x3
 908 021c 00000000 		.4byte	ADC_config
 909 0220 12       		.uleb128 0x12
 910 0221 7B000000 		.4byte	.LASF34
 911 0225 07       		.byte	0x7
 912 0226 21       		.byte	0x21
 913 0227 E8000000 		.4byte	0xe8
 914 022b 05       		.uleb128 0x5
 915 022c 03       		.byte	0x3
 916 022d 00000000 		.4byte	calibrate_array
 917 0231 12       		.uleb128 0x12
 918 0232 CB020000 		.4byte	.LASF35
 919 0236 01       		.byte	0x1
 920 0237 2E       		.byte	0x2e
 921 0238 8C000000 		.4byte	0x8c
 922 023c 05       		.uleb128 0x5
 923 023d 03       		.byte	0x3
 924 023e 00000000 		.4byte	TIA_resistor_value_index
 925 0242 09       		.uleb128 0x9
 926 0243 8C000000 		.4byte	0x8c
 927 0247 52020000 		.4byte	0x252
 928 024b 0A       		.uleb128 0xa
 929 024c DA000000 		.4byte	0xda
 930 0250 0F       		.byte	0xf
 931 0251 00       		.byte	0
 932 0252 12       		.uleb128 0x12
 933 0253 25010000 		.4byte	.LASF36
 934 0257 01       		.byte	0x1
 935 0258 2A       		.byte	0x2a
 936 0259 42020000 		.4byte	0x242
 937 025d 05       		.uleb128 0x5
 938 025e 03       		.byte	0x3
 939 025f 00000000 		.4byte	LCD_str_top
 940 0263 12       		.uleb128 0x12
 941 0264 3E000000 		.4byte	.LASF37
 942 0268 01       		.byte	0x1
 943 0269 2B       		.byte	0x2b
 944 026a 42020000 		.4byte	0x242
 945 026e 05       		.uleb128 0x5
 946 026f 03       		.byte	0x3
 947 0270 00000000 		.4byte	LCD_str_bot
 948 0274 09       		.uleb128 0x9
 949 0275 8C000000 		.4byte	0x8c
 950 0279 84020000 		.4byte	0x284
 951 027d 0A       		.uleb128 0xa
 952 027e DA000000 		.4byte	0xda
 953 0282 3F       		.byte	0x3f
 954 0283 00       		.byte	0
 955 0284 12       		.uleb128 0x12
 956 0285 EA000000 		.4byte	.LASF38
 957 0289 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 23


 958 028a 27       		.byte	0x27
 959 028b 74020000 		.4byte	0x274
 960 028f 05       		.uleb128 0x5
 961 0290 03       		.byte	0x3
 962 0291 00000000 		.4byte	RX_Data
 963 0295 12       		.uleb128 0x12
 964 0296 69010000 		.4byte	.LASF39
 965 029a 01       		.byte	0x1
 966 029b 28       		.byte	0x28
 967 029c 74020000 		.4byte	0x274
 968 02a0 05       		.uleb128 0x5
 969 02a1 03       		.byte	0x3
 970 02a2 00000000 		.4byte	TX_Data
 971 02a6 12       		.uleb128 0x12
 972 02a7 FC020000 		.4byte	.LASF40
 973 02ab 01       		.byte	0x1
 974 02ac 2D       		.byte	0x2d
 975 02ad 8C000000 		.4byte	0x8c
 976 02b1 05       		.uleb128 0x5
 977 02b2 03       		.byte	0x3
 978 02b3 00000000 		.4byte	TIA_offset
 979 02b7 12       		.uleb128 0x12
 980 02b8 1A000000 		.4byte	.LASF41
 981 02bc 01       		.byte	0x1
 982 02bd 36       		.byte	0x36
 983 02be 8C000000 		.4byte	0x8c
 984 02c2 05       		.uleb128 0x5
 985 02c3 03       		.byte	0x3
 986 02c4 00000000 		.4byte	dac_Volts
 987 02c8 12       		.uleb128 0x12
 988 02c9 00000000 		.4byte	.LASF42
 989 02cd 01       		.byte	0x1
 990 02ce 37       		.byte	0x37
 991 02cf 8C000000 		.4byte	0x8c
 992 02d3 05       		.uleb128 0x5
 993 02d4 03       		.byte	0x3
 994 02d5 00000000 		.4byte	conversionCount
 995 02d9 12       		.uleb128 0x12
 996 02da 01020000 		.4byte	.LASF43
 997 02de 01       		.byte	0x1
 998 02df 38       		.byte	0x38
 999 02e0 8C000000 		.4byte	0x8c
 1000 02e4 05       		.uleb128 0x5
 1001 02e5 03       		.byte	0x3
 1002 02e6 00000000 		.4byte	dataReady
 1003 02ea 12       		.uleb128 0x12
 1004 02eb FD000000 		.4byte	.LASF44
 1005 02ef 01       		.byte	0x1
 1006 02f0 3A       		.byte	0x3a
 1007 02f1 C5000000 		.4byte	0xc5
 1008 02f5 05       		.uleb128 0x5
 1009 02f6 03       		.byte	0x3
 1010 02f7 00000000 		.4byte	adcVolts
 1011 02fb 12       		.uleb128 0x12
 1012 02fc F2000000 		.4byte	.LASF45
 1013 0300 01       		.byte	0x1
 1014 0301 3B       		.byte	0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 24


 1015 0302 A2000000 		.4byte	0xa2
 1016 0306 05       		.uleb128 0x5
 1017 0307 03       		.byte	0x3
 1018 0308 00000000 		.4byte	measureADC
 1019 030c 12       		.uleb128 0x12
 1020 030d C2020000 		.4byte	.LASF46
 1021 0311 01       		.byte	0x1
 1022 0312 3C       		.byte	0x3c
 1023 0313 A2000000 		.4byte	0xa2
 1024 0317 05       		.uleb128 0x5
 1025 0318 03       		.byte	0x3
 1026 0319 00000000 		.4byte	adcValue
 1027 031d 12       		.uleb128 0x12
 1028 031e B0000000 		.4byte	.LASF47
 1029 0322 01       		.byte	0x1
 1030 0323 3D       		.byte	0x3d
 1031 0324 A2000000 		.4byte	0xa2
 1032 0328 05       		.uleb128 0x5
 1033 0329 03       		.byte	0x3
 1034 032a 00000000 		.4byte	signedValue
 1035 032e 00       		.byte	0
 1036              		.section	.debug_abbrev,"",%progbits
 1037              	.Ldebug_abbrev0:
 1038 0000 01       		.uleb128 0x1
 1039 0001 11       		.uleb128 0x11
 1040 0002 01       		.byte	0x1
 1041 0003 25       		.uleb128 0x25
 1042 0004 0E       		.uleb128 0xe
 1043 0005 13       		.uleb128 0x13
 1044 0006 0B       		.uleb128 0xb
 1045 0007 03       		.uleb128 0x3
 1046 0008 0E       		.uleb128 0xe
 1047 0009 1B       		.uleb128 0x1b
 1048 000a 0E       		.uleb128 0xe
 1049 000b 55       		.uleb128 0x55
 1050 000c 17       		.uleb128 0x17
 1051 000d 11       		.uleb128 0x11
 1052 000e 01       		.uleb128 0x1
 1053 000f 10       		.uleb128 0x10
 1054 0010 17       		.uleb128 0x17
 1055 0011 00       		.byte	0
 1056 0012 00       		.byte	0
 1057 0013 02       		.uleb128 0x2
 1058 0014 24       		.uleb128 0x24
 1059 0015 00       		.byte	0
 1060 0016 0B       		.uleb128 0xb
 1061 0017 0B       		.uleb128 0xb
 1062 0018 3E       		.uleb128 0x3e
 1063 0019 0B       		.uleb128 0xb
 1064 001a 03       		.uleb128 0x3
 1065 001b 0E       		.uleb128 0xe
 1066 001c 00       		.byte	0
 1067 001d 00       		.byte	0
 1068 001e 03       		.uleb128 0x3
 1069 001f 16       		.uleb128 0x16
 1070 0020 00       		.byte	0
 1071 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 25


 1072 0022 0E       		.uleb128 0xe
 1073 0023 3A       		.uleb128 0x3a
 1074 0024 0B       		.uleb128 0xb
 1075 0025 3B       		.uleb128 0x3b
 1076 0026 0B       		.uleb128 0xb
 1077 0027 49       		.uleb128 0x49
 1078 0028 13       		.uleb128 0x13
 1079 0029 00       		.byte	0
 1080 002a 00       		.byte	0
 1081 002b 04       		.uleb128 0x4
 1082 002c 24       		.uleb128 0x24
 1083 002d 00       		.byte	0
 1084 002e 0B       		.uleb128 0xb
 1085 002f 0B       		.uleb128 0xb
 1086 0030 3E       		.uleb128 0x3e
 1087 0031 0B       		.uleb128 0xb
 1088 0032 03       		.uleb128 0x3
 1089 0033 08       		.uleb128 0x8
 1090 0034 00       		.byte	0
 1091 0035 00       		.byte	0
 1092 0036 05       		.uleb128 0x5
 1093 0037 16       		.uleb128 0x16
 1094 0038 00       		.byte	0
 1095 0039 03       		.uleb128 0x3
 1096 003a 0E       		.uleb128 0xe
 1097 003b 3A       		.uleb128 0x3a
 1098 003c 0B       		.uleb128 0xb
 1099 003d 3B       		.uleb128 0x3b
 1100 003e 05       		.uleb128 0x5
 1101 003f 49       		.uleb128 0x49
 1102 0040 13       		.uleb128 0x13
 1103 0041 00       		.byte	0
 1104 0042 00       		.byte	0
 1105 0043 06       		.uleb128 0x6
 1106 0044 17       		.uleb128 0x17
 1107 0045 01       		.byte	0x1
 1108 0046 03       		.uleb128 0x3
 1109 0047 0E       		.uleb128 0xe
 1110 0048 0B       		.uleb128 0xb
 1111 0049 0B       		.uleb128 0xb
 1112 004a 3A       		.uleb128 0x3a
 1113 004b 0B       		.uleb128 0xb
 1114 004c 3B       		.uleb128 0x3b
 1115 004d 0B       		.uleb128 0xb
 1116 004e 01       		.uleb128 0x1
 1117 004f 13       		.uleb128 0x13
 1118 0050 00       		.byte	0
 1119 0051 00       		.byte	0
 1120 0052 07       		.uleb128 0x7
 1121 0053 0D       		.uleb128 0xd
 1122 0054 00       		.byte	0
 1123 0055 03       		.uleb128 0x3
 1124 0056 08       		.uleb128 0x8
 1125 0057 3A       		.uleb128 0x3a
 1126 0058 0B       		.uleb128 0xb
 1127 0059 3B       		.uleb128 0x3b
 1128 005a 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 26


 1129 005b 49       		.uleb128 0x49
 1130 005c 13       		.uleb128 0x13
 1131 005d 00       		.byte	0
 1132 005e 00       		.byte	0
 1133 005f 08       		.uleb128 0x8
 1134 0060 0D       		.uleb128 0xd
 1135 0061 00       		.byte	0
 1136 0062 03       		.uleb128 0x3
 1137 0063 0E       		.uleb128 0xe
 1138 0064 3A       		.uleb128 0x3a
 1139 0065 0B       		.uleb128 0xb
 1140 0066 3B       		.uleb128 0x3b
 1141 0067 0B       		.uleb128 0xb
 1142 0068 49       		.uleb128 0x49
 1143 0069 13       		.uleb128 0x13
 1144 006a 00       		.byte	0
 1145 006b 00       		.byte	0
 1146 006c 09       		.uleb128 0x9
 1147 006d 01       		.uleb128 0x1
 1148 006e 01       		.byte	0x1
 1149 006f 49       		.uleb128 0x49
 1150 0070 13       		.uleb128 0x13
 1151 0071 01       		.uleb128 0x1
 1152 0072 13       		.uleb128 0x13
 1153 0073 00       		.byte	0
 1154 0074 00       		.byte	0
 1155 0075 0A       		.uleb128 0xa
 1156 0076 21       		.uleb128 0x21
 1157 0077 00       		.byte	0
 1158 0078 49       		.uleb128 0x49
 1159 0079 13       		.uleb128 0x13
 1160 007a 2F       		.uleb128 0x2f
 1161 007b 0B       		.uleb128 0xb
 1162 007c 00       		.byte	0
 1163 007d 00       		.byte	0
 1164 007e 0B       		.uleb128 0xb
 1165 007f 2E       		.uleb128 0x2e
 1166 0080 00       		.byte	0
 1167 0081 3F       		.uleb128 0x3f
 1168 0082 19       		.uleb128 0x19
 1169 0083 03       		.uleb128 0x3
 1170 0084 0E       		.uleb128 0xe
 1171 0085 3A       		.uleb128 0x3a
 1172 0086 0B       		.uleb128 0xb
 1173 0087 3B       		.uleb128 0x3b
 1174 0088 0B       		.uleb128 0xb
 1175 0089 27       		.uleb128 0x27
 1176 008a 19       		.uleb128 0x19
 1177 008b 11       		.uleb128 0x11
 1178 008c 01       		.uleb128 0x1
 1179 008d 12       		.uleb128 0x12
 1180 008e 06       		.uleb128 0x6
 1181 008f 40       		.uleb128 0x40
 1182 0090 18       		.uleb128 0x18
 1183 0091 9742     		.uleb128 0x2117
 1184 0093 19       		.uleb128 0x19
 1185 0094 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 27


 1186 0095 00       		.byte	0
 1187 0096 0C       		.uleb128 0xc
 1188 0097 2E       		.uleb128 0x2e
 1189 0098 01       		.byte	0x1
 1190 0099 3F       		.uleb128 0x3f
 1191 009a 19       		.uleb128 0x19
 1192 009b 03       		.uleb128 0x3
 1193 009c 0E       		.uleb128 0xe
 1194 009d 3A       		.uleb128 0x3a
 1195 009e 0B       		.uleb128 0xb
 1196 009f 3B       		.uleb128 0x3b
 1197 00a0 0B       		.uleb128 0xb
 1198 00a1 27       		.uleb128 0x27
 1199 00a2 19       		.uleb128 0x19
 1200 00a3 11       		.uleb128 0x11
 1201 00a4 01       		.uleb128 0x1
 1202 00a5 12       		.uleb128 0x12
 1203 00a6 06       		.uleb128 0x6
 1204 00a7 40       		.uleb128 0x40
 1205 00a8 18       		.uleb128 0x18
 1206 00a9 9642     		.uleb128 0x2116
 1207 00ab 19       		.uleb128 0x19
 1208 00ac 01       		.uleb128 0x1
 1209 00ad 13       		.uleb128 0x13
 1210 00ae 00       		.byte	0
 1211 00af 00       		.byte	0
 1212 00b0 0D       		.uleb128 0xd
 1213 00b1 0B       		.uleb128 0xb
 1214 00b2 01       		.byte	0x1
 1215 00b3 11       		.uleb128 0x11
 1216 00b4 01       		.uleb128 0x1
 1217 00b5 12       		.uleb128 0x12
 1218 00b6 06       		.uleb128 0x6
 1219 00b7 00       		.byte	0
 1220 00b8 00       		.byte	0
 1221 00b9 0E       		.uleb128 0xe
 1222 00ba 34       		.uleb128 0x34
 1223 00bb 00       		.byte	0
 1224 00bc 03       		.uleb128 0x3
 1225 00bd 0E       		.uleb128 0xe
 1226 00be 3A       		.uleb128 0x3a
 1227 00bf 0B       		.uleb128 0xb
 1228 00c0 3B       		.uleb128 0x3b
 1229 00c1 0B       		.uleb128 0xb
 1230 00c2 49       		.uleb128 0x49
 1231 00c3 13       		.uleb128 0x13
 1232 00c4 02       		.uleb128 0x2
 1233 00c5 18       		.uleb128 0x18
 1234 00c6 00       		.byte	0
 1235 00c7 00       		.byte	0
 1236 00c8 0F       		.uleb128 0xf
 1237 00c9 2E       		.uleb128 0x2e
 1238 00ca 01       		.byte	0x1
 1239 00cb 3F       		.uleb128 0x3f
 1240 00cc 19       		.uleb128 0x19
 1241 00cd 03       		.uleb128 0x3
 1242 00ce 0E       		.uleb128 0xe
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 28


 1243 00cf 3A       		.uleb128 0x3a
 1244 00d0 0B       		.uleb128 0xb
 1245 00d1 3B       		.uleb128 0x3b
 1246 00d2 0B       		.uleb128 0xb
 1247 00d3 49       		.uleb128 0x49
 1248 00d4 13       		.uleb128 0x13
 1249 00d5 11       		.uleb128 0x11
 1250 00d6 01       		.uleb128 0x1
 1251 00d7 12       		.uleb128 0x12
 1252 00d8 06       		.uleb128 0x6
 1253 00d9 40       		.uleb128 0x40
 1254 00da 18       		.uleb128 0x18
 1255 00db 9642     		.uleb128 0x2116
 1256 00dd 19       		.uleb128 0x19
 1257 00de 01       		.uleb128 0x1
 1258 00df 13       		.uleb128 0x13
 1259 00e0 00       		.byte	0
 1260 00e1 00       		.byte	0
 1261 00e2 10       		.uleb128 0x10
 1262 00e3 34       		.uleb128 0x34
 1263 00e4 00       		.byte	0
 1264 00e5 03       		.uleb128 0x3
 1265 00e6 0E       		.uleb128 0xe
 1266 00e7 3A       		.uleb128 0x3a
 1267 00e8 0B       		.uleb128 0xb
 1268 00e9 3B       		.uleb128 0x3b
 1269 00ea 05       		.uleb128 0x5
 1270 00eb 49       		.uleb128 0x49
 1271 00ec 13       		.uleb128 0x13
 1272 00ed 3F       		.uleb128 0x3f
 1273 00ee 19       		.uleb128 0x19
 1274 00ef 3C       		.uleb128 0x3c
 1275 00f0 19       		.uleb128 0x19
 1276 00f1 00       		.byte	0
 1277 00f2 00       		.byte	0
 1278 00f3 11       		.uleb128 0x11
 1279 00f4 35       		.uleb128 0x35
 1280 00f5 00       		.byte	0
 1281 00f6 49       		.uleb128 0x49
 1282 00f7 13       		.uleb128 0x13
 1283 00f8 00       		.byte	0
 1284 00f9 00       		.byte	0
 1285 00fa 12       		.uleb128 0x12
 1286 00fb 34       		.uleb128 0x34
 1287 00fc 00       		.byte	0
 1288 00fd 03       		.uleb128 0x3
 1289 00fe 0E       		.uleb128 0xe
 1290 00ff 3A       		.uleb128 0x3a
 1291 0100 0B       		.uleb128 0xb
 1292 0101 3B       		.uleb128 0x3b
 1293 0102 0B       		.uleb128 0xb
 1294 0103 49       		.uleb128 0x49
 1295 0104 13       		.uleb128 0x13
 1296 0105 3F       		.uleb128 0x3f
 1297 0106 19       		.uleb128 0x19
 1298 0107 02       		.uleb128 0x2
 1299 0108 18       		.uleb128 0x18
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 29


 1300 0109 00       		.byte	0
 1301 010a 00       		.byte	0
 1302 010b 00       		.byte	0
 1303              		.section	.debug_aranges,"",%progbits
 1304 0000 2C000000 		.4byte	0x2c
 1305 0004 0200     		.2byte	0x2
 1306 0006 00000000 		.4byte	.Ldebug_info0
 1307 000a 04       		.byte	0x4
 1308 000b 00       		.byte	0
 1309 000c 0000     		.2byte	0
 1310 000e 0000     		.2byte	0
 1311 0010 00000000 		.4byte	.LFB64
 1312 0014 20000000 		.4byte	.LFE64-.LFB64
 1313 0018 00000000 		.4byte	.LFB65
 1314 001c A8000000 		.4byte	.LFE65-.LFB65
 1315 0020 00000000 		.4byte	.LFB66
 1316 0024 BC020000 		.4byte	.LFE66-.LFB66
 1317 0028 00000000 		.4byte	0
 1318 002c 00000000 		.4byte	0
 1319              		.section	.debug_ranges,"",%progbits
 1320              	.Ldebug_ranges0:
 1321 0000 00000000 		.4byte	.LFB64
 1322 0004 20000000 		.4byte	.LFE64
 1323 0008 00000000 		.4byte	.LFB65
 1324 000c A8000000 		.4byte	.LFE65
 1325 0010 00000000 		.4byte	.LFB66
 1326 0014 BC020000 		.4byte	.LFE66
 1327 0018 00000000 		.4byte	0
 1328 001c 00000000 		.4byte	0
 1329              		.section	.debug_line,"",%progbits
 1330              	.Ldebug_line0:
 1331 0000 1F020000 		.section	.debug_str,"MS",%progbits,1
 1331      02006C01 
 1331      00000201 
 1331      FB0E0D00 
 1331      01010101 
 1332              	.LASF42:
 1333 0000 636F6E76 		.ascii	"conversionCount\000"
 1333      65727369 
 1333      6F6E436F 
 1333      756E7400 
 1334              	.LASF2:
 1335 0010 5F5F7569 		.ascii	"__uint8_t\000"
 1335      6E74385F 
 1335      7400
 1336              	.LASF41:
 1337 001a 6461635F 		.ascii	"dac_Volts\000"
 1337      566F6C74 
 1337      7300
 1338              	.LASF3:
 1339 0024 5F5F696E 		.ascii	"__int16_t\000"
 1339      7431365F 
 1339      7400
 1340              	.LASF23:
 1341 002e 76616C75 		.ascii	"value\000"
 1341      6500
 1342              	.LASF6:
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 30


 1343 0034 5F5F696E 		.ascii	"__int32_t\000"
 1343      7433325F 
 1343      7400
 1344              	.LASF37:
 1345 003e 4C43445F 		.ascii	"LCD_str_bot\000"
 1345      7374725F 
 1345      626F7400 
 1346              	.LASF4:
 1347 004a 73686F72 		.ascii	"short int\000"
 1347      7420696E 
 1347      7400
 1348              	.LASF52:
 1349 0054 4144435F 		.ascii	"ADC_ISR_RESET\000"
 1349      4953525F 
 1349      52455345 
 1349      5400
 1350              	.LASF17:
 1351 0062 666C6F61 		.ascii	"float\000"
 1351      7400
 1352              	.LASF22:
 1353 0068 64617461 		.ascii	"data\000"
 1353      00
 1354              	.LASF1:
 1355 006d 756E7369 		.ascii	"unsigned char\000"
 1355      676E6564 
 1355      20636861 
 1355      7200
 1356              	.LASF34:
 1357 007b 63616C69 		.ascii	"calibrate_array\000"
 1357      62726174 
 1357      655F6172 
 1357      72617900 
 1358              	.LASF8:
 1359 008b 6C6F6E67 		.ascii	"long unsigned int\000"
 1359      20756E73 
 1359      69676E65 
 1359      6420696E 
 1359      7400
 1360              	.LASF5:
 1361 009d 73686F72 		.ascii	"short unsigned int\000"
 1361      7420756E 
 1361      7369676E 
 1361      65642069 
 1361      6E7400
 1362              	.LASF47:
 1363 00b0 7369676E 		.ascii	"signedValue\000"
 1363      65645661 
 1363      6C756500 
 1364              	.LASF51:
 1365 00bc 63616C69 		.ascii	"calibrate_data_usb_union\000"
 1365      62726174 
 1365      655F6461 
 1365      74615F75 
 1365      73625F75 
 1366              	.LASF30:
 1367 00d5 766F6C74 		.ascii	"voltage\000"
 1367      61676500 
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 31


 1368              	.LASF28:
 1369 00dd 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1369      52784275 
 1369      66666572 
 1369      00
 1370              	.LASF38:
 1371 00ea 52585F44 		.ascii	"RX_Data\000"
 1371      61746100 
 1372              	.LASF45:
 1373 00f2 6D656173 		.ascii	"measureADC\000"
 1373      75726541 
 1373      444300
 1374              	.LASF44:
 1375 00fd 61646356 		.ascii	"adcVolts\000"
 1375      6F6C7473 
 1375      00
 1376              	.LASF24:
 1377 0106 696E7665 		.ascii	"invertedValue\000"
 1377      72746564 
 1377      56616C75 
 1377      6500
 1378              	.LASF32:
 1379 0114 4144435F 		.ascii	"ADC_buffer_index\000"
 1379      62756666 
 1379      65725F69 
 1379      6E646578 
 1379      00
 1380              	.LASF36:
 1381 0125 4C43445F 		.ascii	"LCD_str_top\000"
 1381      7374725F 
 1381      746F7000 
 1382              	.LASF16:
 1383 0131 75696E74 		.ascii	"uint16\000"
 1383      313600
 1384              	.LASF26:
 1385 0138 6D61696E 		.ascii	"main\000"
 1385      00
 1386              	.LASF11:
 1387 013d 756E7369 		.ascii	"unsigned int\000"
 1387      676E6564 
 1387      20696E74 
 1387      00
 1388              	.LASF10:
 1389 014a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1389      206C6F6E 
 1389      6720756E 
 1389      7369676E 
 1389      65642069 
 1390              	.LASF12:
 1391 0161 75696E74 		.ascii	"uint8_t\000"
 1391      385F7400 
 1392              	.LASF39:
 1393 0169 54585F44 		.ascii	"TX_Data\000"
 1393      61746100 
 1394              	.LASF13:
 1395 0171 696E7431 		.ascii	"int16_t\000"
 1395      365F7400 
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 32


 1396              	.LASF18:
 1397 0179 646F7562 		.ascii	"double\000"
 1397      6C6500
 1398              	.LASF25:
 1399 0180 4144435F 		.ascii	"ADC_ISR\000"
 1399      49535200 
 1400              	.LASF14:
 1401 0188 696E7433 		.ascii	"int32_t\000"
 1401      325F7400 
 1402              	.LASF20:
 1403 0190 73697A65 		.ascii	"sizetype\000"
 1403      74797065 
 1403      00
 1404              	.LASF9:
 1405 0199 6C6F6E67 		.ascii	"long long int\000"
 1405      206C6F6E 
 1405      6720696E 
 1405      7400
 1406              	.LASF49:
 1407 01a7 6D61696E 		.ascii	"main.c\000"
 1407      2E6300
 1408              	.LASF19:
 1409 01ae 63686172 		.ascii	"char\000"
 1409      00
 1410              	.LASF50:
 1411 01b3 433A5C55 		.ascii	"C:\\Users\\User\\Dropbox\\67 PSOC\\PSoC-Potentiosta"
 1411      73657273 
 1411      5C557365 
 1411      725C4472 
 1411      6F70626F 
 1412 01e1 745C502D 		.ascii	"t\\P-Stat.cydsn\000"
 1412      53746174 
 1412      2E637964 
 1412      736E00
 1413              	.LASF27:
 1414 01f0 636F756E 		.ascii	"count\000"
 1414      7400
 1415              	.LASF33:
 1416 01f6 4144435F 		.ascii	"ADC_config\000"
 1416      636F6E66 
 1416      696700
 1417              	.LASF43:
 1418 0201 64617461 		.ascii	"dataReady\000"
 1418      52656164 
 1418      7900
 1419              	.LASF48:
 1420 020b 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1420      43393920 
 1420      352E342E 
 1420      31203230 
 1420      31363036 
 1421 023e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1421      20726576 
 1421      6973696F 
 1421      6E203233 
 1421      37373135 
 1422 0271 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\cccJ98lB.s 			page 33


 1422      74643D67 
 1422      6E753939 
 1422      202D6666 
 1422      756E6374 
 1423              	.LASF29:
 1424 02a4 62756666 		.ascii	"buffer\000"
 1424      657200
 1425              	.LASF15:
 1426 02ab 75696E74 		.ascii	"uint8\000"
 1426      3800
 1427              	.LASF31:
 1428 02b1 63757272 		.ascii	"current\000"
 1428      656E7400 
 1429              	.LASF7:
 1430 02b9 6C6F6E67 		.ascii	"long int\000"
 1430      20696E74 
 1430      00
 1431              	.LASF46:
 1432 02c2 61646356 		.ascii	"adcValue\000"
 1432      616C7565 
 1432      00
 1433              	.LASF35:
 1434 02cb 5449415F 		.ascii	"TIA_resistor_value_index\000"
 1434      72657369 
 1434      73746F72 
 1434      5F76616C 
 1434      75655F69 
 1435              	.LASF21:
 1436 02e4 6C6F6E67 		.ascii	"long double\000"
 1436      20646F75 
 1436      626C6500 
 1437              	.LASF0:
 1438 02f0 7369676E 		.ascii	"signed char\000"
 1438      65642063 
 1438      68617200 
 1439              	.LASF40:
 1440 02fc 5449415F 		.ascii	"TIA_offset\000"
 1440      6F666673 
 1440      657400
 1441              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
