ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_isr_PM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	PWM_isr_backup:
  22 0000 00000000 		.space	8
  22      00000000 
  23              		.section	.text.PWM_isr_SaveConfig,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_isr_SaveConfig
  26              		.thumb
  27              		.thumb_func
  28              		.type	PWM_isr_SaveConfig, %function
  29              	PWM_isr_SaveConfig:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC5\\PWM_isr_PM.c"
   1:Generated_Source\PSoC5/PWM_isr_PM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_isr_PM.c **** * File Name: PWM_isr_PM.c
   3:Generated_Source\PSoC5/PWM_isr_PM.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_isr_PM.c **** *
   5:Generated_Source\PSoC5/PWM_isr_PM.c **** * Description:
   6:Generated_Source\PSoC5/PWM_isr_PM.c **** *  This file provides the power management source code to API for the
   7:Generated_Source\PSoC5/PWM_isr_PM.c **** *  PWM.
   8:Generated_Source\PSoC5/PWM_isr_PM.c **** *
   9:Generated_Source\PSoC5/PWM_isr_PM.c **** * Note:
  10:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  11:Generated_Source\PSoC5/PWM_isr_PM.c **** ********************************************************************************
  12:Generated_Source\PSoC5/PWM_isr_PM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/PWM_isr_PM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/PWM_isr_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/PWM_isr_PM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/PWM_isr_PM.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  18:Generated_Source\PSoC5/PWM_isr_PM.c **** #include "PWM_isr.h"
  19:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  20:Generated_Source\PSoC5/PWM_isr_PM.c **** static PWM_isr_backupStruct PWM_isr_backup;
  21:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  22:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  23:Generated_Source\PSoC5/PWM_isr_PM.c **** /*******************************************************************************
  24:Generated_Source\PSoC5/PWM_isr_PM.c **** * Function Name: PWM_isr_SaveConfig
  25:Generated_Source\PSoC5/PWM_isr_PM.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 2


  26:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  27:Generated_Source\PSoC5/PWM_isr_PM.c **** * Summary:
  28:Generated_Source\PSoC5/PWM_isr_PM.c **** *  Saves the current user configuration of the component.
  29:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  30:Generated_Source\PSoC5/PWM_isr_PM.c **** * Parameters:
  31:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
  32:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  33:Generated_Source\PSoC5/PWM_isr_PM.c **** * Return:
  34:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
  35:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  36:Generated_Source\PSoC5/PWM_isr_PM.c **** * Global variables:
  37:Generated_Source\PSoC5/PWM_isr_PM.c **** *  PWM_isr_backup:  Variables of this global structure are modified to
  38:Generated_Source\PSoC5/PWM_isr_PM.c **** *  store the values of non retention configuration registers when Sleep() API is
  39:Generated_Source\PSoC5/PWM_isr_PM.c **** *  called.
  40:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  41:Generated_Source\PSoC5/PWM_isr_PM.c **** *******************************************************************************/
  42:Generated_Source\PSoC5/PWM_isr_PM.c **** void PWM_isr_SaveConfig(void) 
  43:Generated_Source\PSoC5/PWM_isr_PM.c **** {
  32              		.loc 1 43 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  44:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  45:Generated_Source\PSoC5/PWM_isr_PM.c ****     #if(!PWM_isr_UsingFixedFunction)
  46:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if(!PWM_isr_PWMModeIsCenterAligned)
  47:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.PWMPeriod = PWM_isr_ReadPeriod();
  42              		.loc 1 47 0
  43 0004 FFF7FEFF 		bl	PWM_isr_ReadPeriod
  44 0008 0346     		mov	r3, r0
  45 000a 1A46     		mov	r2, r3
  46 000c 074B     		ldr	r3, .L2
  47 000e 9A80     		strh	r2, [r3, #4]	@ movhi
  48:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif /* (!PWM_isr_PWMModeIsCenterAligned) */
  49:Generated_Source\PSoC5/PWM_isr_PM.c ****         PWM_isr_backup.PWMUdb = PWM_isr_ReadCounter();
  48              		.loc 1 49 0
  49 0010 FFF7FEFF 		bl	PWM_isr_ReadCounter
  50 0014 0346     		mov	r3, r0
  51 0016 1A46     		mov	r2, r3
  52 0018 044B     		ldr	r3, .L2
  53 001a 5A80     		strh	r2, [r3, #2]	@ movhi
  50:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if (PWM_isr_UseStatus)
  51:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.InterruptMaskValue = PWM_isr_STATUS_MASK;
  52:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif /* (PWM_isr_UseStatus) */
  53:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  54:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if(PWM_isr_DeadBandMode == PWM_isr__B_PWM__DBM_256_CLOCKS || \
  55:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_DeadBandMode == PWM_isr__B_PWM__DBM_2_4_CLOCKS)
  56:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.PWMdeadBandValue = PWM_isr_ReadDeadTime();
  57:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif /*  deadband count is either 2-4 clocks or 256 clocks */
  58:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  59:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if(PWM_isr_KillModeMinTime)
  60:Generated_Source\PSoC5/PWM_isr_PM.c ****              PWM_isr_backup.PWMKillCounterPeriod = PWM_isr_ReadKillTime();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 3


  61:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif /* (PWM_isr_KillModeMinTime) */
  62:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  63:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if(PWM_isr_UseControl)
  64:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.PWMControlRegister = PWM_isr_ReadControlRegister();
  54              		.loc 1 64 0
  55 001c FFF7FEFF 		bl	PWM_isr_ReadControlRegister
  56 0020 0346     		mov	r3, r0
  57 0022 1A46     		mov	r2, r3
  58 0024 014B     		ldr	r3, .L2
  59 0026 9A71     		strb	r2, [r3, #6]
  65:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif /* (PWM_isr_UseControl) */
  66:Generated_Source\PSoC5/PWM_isr_PM.c ****     #endif  /* (!PWM_isr_UsingFixedFunction) */
  67:Generated_Source\PSoC5/PWM_isr_PM.c **** }
  60              		.loc 1 67 0
  61 0028 00BF     		nop
  62 002a 80BD     		pop	{r7, pc}
  63              	.L3:
  64              		.align	2
  65              	.L2:
  66 002c 00000000 		.word	PWM_isr_backup
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	PWM_isr_SaveConfig, .-PWM_isr_SaveConfig
  70              		.section	.text.PWM_isr_RestoreConfig,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_isr_RestoreConfig
  73              		.thumb
  74              		.thumb_func
  75              		.type	PWM_isr_RestoreConfig, %function
  76              	PWM_isr_RestoreConfig:
  77              	.LFB1:
  68:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  69:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  70:Generated_Source\PSoC5/PWM_isr_PM.c **** /*******************************************************************************
  71:Generated_Source\PSoC5/PWM_isr_PM.c **** * Function Name: PWM_isr_RestoreConfig
  72:Generated_Source\PSoC5/PWM_isr_PM.c **** ********************************************************************************
  73:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  74:Generated_Source\PSoC5/PWM_isr_PM.c **** * Summary:
  75:Generated_Source\PSoC5/PWM_isr_PM.c **** *  Restores the current user configuration of the component.
  76:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  77:Generated_Source\PSoC5/PWM_isr_PM.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
  79:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  80:Generated_Source\PSoC5/PWM_isr_PM.c **** * Return:
  81:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
  82:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  83:Generated_Source\PSoC5/PWM_isr_PM.c **** * Global variables:
  84:Generated_Source\PSoC5/PWM_isr_PM.c **** *  PWM_isr_backup:  Variables of this global structure are used to
  85:Generated_Source\PSoC5/PWM_isr_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
  86:Generated_Source\PSoC5/PWM_isr_PM.c **** *
  87:Generated_Source\PSoC5/PWM_isr_PM.c **** *******************************************************************************/
  88:Generated_Source\PSoC5/PWM_isr_PM.c **** void PWM_isr_RestoreConfig(void) 
  89:Generated_Source\PSoC5/PWM_isr_PM.c **** {
  78              		.loc 1 89 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 4


  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
  90:Generated_Source\PSoC5/PWM_isr_PM.c ****         #if(!PWM_isr_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_isr_PM.c ****             #if(!PWM_isr_PWMModeIsCenterAligned)
  92:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_WritePeriod(PWM_isr_backup.PWMPeriod);
  88              		.loc 1 92 0
  89 0004 084B     		ldr	r3, .L5
  90 0006 9B88     		ldrh	r3, [r3, #4]
  91 0008 1846     		mov	r0, r3
  92 000a FFF7FEFF 		bl	PWM_isr_WritePeriod
  93:Generated_Source\PSoC5/PWM_isr_PM.c ****             #endif /* (!PWM_isr_PWMModeIsCenterAligned) */
  94:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  95:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_WriteCounter(PWM_isr_backup.PWMUdb);
  93              		.loc 1 95 0
  94 000e 064B     		ldr	r3, .L5
  95 0010 5B88     		ldrh	r3, [r3, #2]
  96 0012 1846     		mov	r0, r3
  97 0014 FFF7FEFF 		bl	PWM_isr_WriteCounter
  96:Generated_Source\PSoC5/PWM_isr_PM.c **** 
  97:Generated_Source\PSoC5/PWM_isr_PM.c ****             #if (PWM_isr_UseStatus)
  98:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_STATUS_MASK = PWM_isr_backup.InterruptMaskValue;
  99:Generated_Source\PSoC5/PWM_isr_PM.c ****             #endif /* (PWM_isr_UseStatus) */
 100:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 101:Generated_Source\PSoC5/PWM_isr_PM.c ****             #if(PWM_isr_DeadBandMode == PWM_isr__B_PWM__DBM_256_CLOCKS || \
 102:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_DeadBandMode == PWM_isr__B_PWM__DBM_2_4_CLOCKS)
 103:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_WriteDeadTime(PWM_isr_backup.PWMdeadBandValue);
 104:Generated_Source\PSoC5/PWM_isr_PM.c ****             #endif /* deadband count is either 2-4 clocks or 256 clocks */
 105:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 106:Generated_Source\PSoC5/PWM_isr_PM.c ****             #if(PWM_isr_KillModeMinTime)
 107:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_WriteKillTime(PWM_isr_backup.PWMKillCounterPeriod);
 108:Generated_Source\PSoC5/PWM_isr_PM.c ****             #endif /* (PWM_isr_KillModeMinTime) */
 109:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 110:Generated_Source\PSoC5/PWM_isr_PM.c ****             #if(PWM_isr_UseControl)
 111:Generated_Source\PSoC5/PWM_isr_PM.c ****                 PWM_isr_WriteControlRegister(PWM_isr_backup.PWMControlRegister);
  98              		.loc 1 111 0
  99 0018 034B     		ldr	r3, .L5
 100 001a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 101 001c 1846     		mov	r0, r3
 102 001e FFF7FEFF 		bl	PWM_isr_WriteControlRegister
 112:Generated_Source\PSoC5/PWM_isr_PM.c ****             #endif /* (PWM_isr_UseControl) */
 113:Generated_Source\PSoC5/PWM_isr_PM.c ****         #endif  /* (!PWM_isr_UsingFixedFunction) */
 114:Generated_Source\PSoC5/PWM_isr_PM.c ****     }
 103              		.loc 1 114 0
 104 0022 00BF     		nop
 105 0024 80BD     		pop	{r7, pc}
 106              	.L6:
 107 0026 00BF     		.align	2
 108              	.L5:
 109 0028 00000000 		.word	PWM_isr_backup
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	PWM_isr_RestoreConfig, .-PWM_isr_RestoreConfig
 113              		.section	.text.PWM_isr_Sleep,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 5


 114              		.align	2
 115              		.global	PWM_isr_Sleep
 116              		.thumb
 117              		.thumb_func
 118              		.type	PWM_isr_Sleep, %function
 119              	PWM_isr_Sleep:
 120              	.LFB2:
 115:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 116:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 117:Generated_Source\PSoC5/PWM_isr_PM.c **** /*******************************************************************************
 118:Generated_Source\PSoC5/PWM_isr_PM.c **** * Function Name: PWM_isr_Sleep
 119:Generated_Source\PSoC5/PWM_isr_PM.c **** ********************************************************************************
 120:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 121:Generated_Source\PSoC5/PWM_isr_PM.c **** * Summary:
 122:Generated_Source\PSoC5/PWM_isr_PM.c **** *  Disables block's operation and saves the user configuration. Should be called
 123:Generated_Source\PSoC5/PWM_isr_PM.c **** *  just prior to entering sleep.
 124:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 125:Generated_Source\PSoC5/PWM_isr_PM.c **** * Parameters:
 126:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
 127:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 128:Generated_Source\PSoC5/PWM_isr_PM.c **** * Return:
 129:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
 130:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 131:Generated_Source\PSoC5/PWM_isr_PM.c **** * Global variables:
 132:Generated_Source\PSoC5/PWM_isr_PM.c **** *  PWM_isr_backup.PWMEnableState:  Is modified depending on the enable
 133:Generated_Source\PSoC5/PWM_isr_PM.c **** *  state of the block before entering sleep mode.
 134:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 135:Generated_Source\PSoC5/PWM_isr_PM.c **** *******************************************************************************/
 136:Generated_Source\PSoC5/PWM_isr_PM.c **** void PWM_isr_Sleep(void) 
 137:Generated_Source\PSoC5/PWM_isr_PM.c **** {
 121              		.loc 1 137 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 138:Generated_Source\PSoC5/PWM_isr_PM.c ****     #if(PWM_isr_UseControl)
 139:Generated_Source\PSoC5/PWM_isr_PM.c ****         if(PWM_isr_CTRL_ENABLE == (PWM_isr_CONTROL & PWM_isr_CTRL_ENABLE))
 131              		.loc 1 139 0
 132 0004 094B     		ldr	r3, .L10
 133 0006 1B78     		ldrb	r3, [r3]
 134 0008 DBB2     		uxtb	r3, r3
 135 000a 5BB2     		sxtb	r3, r3
 136 000c 002B     		cmp	r3, #0
 137 000e 03DA     		bge	.L8
 140:Generated_Source\PSoC5/PWM_isr_PM.c ****         {
 141:Generated_Source\PSoC5/PWM_isr_PM.c ****             /*Component is enabled */
 142:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.PWMEnableState = 1u;
 138              		.loc 1 142 0
 139 0010 074B     		ldr	r3, .L10+4
 140 0012 0122     		movs	r2, #1
 141 0014 1A70     		strb	r2, [r3]
 142 0016 02E0     		b	.L9
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 6


 143              	.L8:
 143:Generated_Source\PSoC5/PWM_isr_PM.c ****         }
 144:Generated_Source\PSoC5/PWM_isr_PM.c ****         else
 145:Generated_Source\PSoC5/PWM_isr_PM.c ****         {
 146:Generated_Source\PSoC5/PWM_isr_PM.c ****             /* Component is disabled */
 147:Generated_Source\PSoC5/PWM_isr_PM.c ****             PWM_isr_backup.PWMEnableState = 0u;
 144              		.loc 1 147 0
 145 0018 054B     		ldr	r3, .L10+4
 146 001a 0022     		movs	r2, #0
 147 001c 1A70     		strb	r2, [r3]
 148              	.L9:
 148:Generated_Source\PSoC5/PWM_isr_PM.c ****         }
 149:Generated_Source\PSoC5/PWM_isr_PM.c ****     #endif /* (PWM_isr_UseControl) */
 150:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 151:Generated_Source\PSoC5/PWM_isr_PM.c ****     /* Stop component */
 152:Generated_Source\PSoC5/PWM_isr_PM.c ****     PWM_isr_Stop();
 149              		.loc 1 152 0
 150 001e FFF7FEFF 		bl	PWM_isr_Stop
 153:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 154:Generated_Source\PSoC5/PWM_isr_PM.c ****     /* Save registers configuration */
 155:Generated_Source\PSoC5/PWM_isr_PM.c ****     PWM_isr_SaveConfig();
 151              		.loc 1 155 0
 152 0022 FFF7FEFF 		bl	PWM_isr_SaveConfig
 156:Generated_Source\PSoC5/PWM_isr_PM.c **** }
 153              		.loc 1 156 0
 154 0026 00BF     		nop
 155 0028 80BD     		pop	{r7, pc}
 156              	.L11:
 157 002a 00BF     		.align	2
 158              	.L10:
 159 002c 7B640040 		.word	1073767547
 160 0030 00000000 		.word	PWM_isr_backup
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	PWM_isr_Sleep, .-PWM_isr_Sleep
 164              		.section	.text.PWM_isr_Wakeup,"ax",%progbits
 165              		.align	2
 166              		.global	PWM_isr_Wakeup
 167              		.thumb
 168              		.thumb_func
 169              		.type	PWM_isr_Wakeup, %function
 170              	PWM_isr_Wakeup:
 171              	.LFB3:
 157:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 158:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 159:Generated_Source\PSoC5/PWM_isr_PM.c **** /*******************************************************************************
 160:Generated_Source\PSoC5/PWM_isr_PM.c **** * Function Name: PWM_isr_Wakeup
 161:Generated_Source\PSoC5/PWM_isr_PM.c **** ********************************************************************************
 162:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 163:Generated_Source\PSoC5/PWM_isr_PM.c **** * Summary:
 164:Generated_Source\PSoC5/PWM_isr_PM.c **** *  Restores and enables the user configuration. Should be called just after
 165:Generated_Source\PSoC5/PWM_isr_PM.c **** *  awaking from sleep.
 166:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 167:Generated_Source\PSoC5/PWM_isr_PM.c **** * Parameters:
 168:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
 169:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 170:Generated_Source\PSoC5/PWM_isr_PM.c **** * Return:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 7


 171:Generated_Source\PSoC5/PWM_isr_PM.c **** *  None
 172:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 173:Generated_Source\PSoC5/PWM_isr_PM.c **** * Global variables:
 174:Generated_Source\PSoC5/PWM_isr_PM.c **** *  PWM_isr_backup.pwmEnable:  Is used to restore the enable state of
 175:Generated_Source\PSoC5/PWM_isr_PM.c **** *  block on wakeup from sleep mode.
 176:Generated_Source\PSoC5/PWM_isr_PM.c **** *
 177:Generated_Source\PSoC5/PWM_isr_PM.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/PWM_isr_PM.c **** void PWM_isr_Wakeup(void) 
 179:Generated_Source\PSoC5/PWM_isr_PM.c **** {
 172              		.loc 1 179 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 180:Generated_Source\PSoC5/PWM_isr_PM.c ****      /* Restore registers values */
 181:Generated_Source\PSoC5/PWM_isr_PM.c ****     PWM_isr_RestoreConfig();
 182              		.loc 1 181 0
 183 0004 FFF7FEFF 		bl	PWM_isr_RestoreConfig
 182:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 183:Generated_Source\PSoC5/PWM_isr_PM.c ****     if(PWM_isr_backup.PWMEnableState != 0u)
 184              		.loc 1 183 0
 185 0008 034B     		ldr	r3, .L15
 186 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 187 000c 002B     		cmp	r3, #0
 188 000e 01D0     		beq	.L14
 184:Generated_Source\PSoC5/PWM_isr_PM.c ****     {
 185:Generated_Source\PSoC5/PWM_isr_PM.c ****         /* Enable component's operation */
 186:Generated_Source\PSoC5/PWM_isr_PM.c ****         PWM_isr_Enable();
 189              		.loc 1 186 0
 190 0010 FFF7FEFF 		bl	PWM_isr_Enable
 191              	.L14:
 187:Generated_Source\PSoC5/PWM_isr_PM.c ****     } /* Do nothing if component's block was disabled before */
 188:Generated_Source\PSoC5/PWM_isr_PM.c **** 
 189:Generated_Source\PSoC5/PWM_isr_PM.c **** }
 192              		.loc 1 189 0
 193 0014 00BF     		nop
 194 0016 80BD     		pop	{r7, pc}
 195              	.L16:
 196              		.align	2
 197              	.L15:
 198 0018 00000000 		.word	PWM_isr_backup
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	PWM_isr_Wakeup, .-PWM_isr_Wakeup
 202              		.text
 203              	.Letext0:
 204              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 205              		.file 3 "Generated_Source\\PSoC5\\PWM_isr.h"
 206              		.section	.debug_info,"",%progbits
 207              	.Ldebug_info0:
 208 0000 46010000 		.4byte	0x146
 209 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 8


 210 0006 00000000 		.4byte	.Ldebug_abbrev0
 211 000a 04       		.byte	0x4
 212 000b 01       		.uleb128 0x1
 213 000c E2000000 		.4byte	.LASF25
 214 0010 0C       		.byte	0xc
 215 0011 95000000 		.4byte	.LASF26
 216 0015 92010000 		.4byte	.LASF27
 217 0019 00000000 		.4byte	.Ldebug_ranges0+0
 218 001d 00000000 		.4byte	0
 219 0021 00000000 		.4byte	.Ldebug_line0
 220 0025 02       		.uleb128 0x2
 221 0026 01       		.byte	0x1
 222 0027 06       		.byte	0x6
 223 0028 F3010000 		.4byte	.LASF0
 224 002c 02       		.uleb128 0x2
 225 002d 01       		.byte	0x1
 226 002e 08       		.byte	0x8
 227 002f BE000000 		.4byte	.LASF1
 228 0033 02       		.uleb128 0x2
 229 0034 02       		.byte	0x2
 230 0035 05       		.byte	0x5
 231 0036 05020000 		.4byte	.LASF2
 232 003a 02       		.uleb128 0x2
 233 003b 02       		.byte	0x2
 234 003c 07       		.byte	0x7
 235 003d E0010000 		.4byte	.LASF3
 236 0041 02       		.uleb128 0x2
 237 0042 04       		.byte	0x4
 238 0043 05       		.byte	0x5
 239 0044 89010000 		.4byte	.LASF4
 240 0048 02       		.uleb128 0x2
 241 0049 04       		.byte	0x4
 242 004a 07       		.byte	0x7
 243 004b 44000000 		.4byte	.LASF5
 244 004f 02       		.uleb128 0x2
 245 0050 08       		.byte	0x8
 246 0051 05       		.byte	0x5
 247 0052 00000000 		.4byte	.LASF6
 248 0056 02       		.uleb128 0x2
 249 0057 08       		.byte	0x8
 250 0058 07       		.byte	0x7
 251 0059 6B000000 		.4byte	.LASF7
 252 005d 03       		.uleb128 0x3
 253 005e 04       		.byte	0x4
 254 005f 05       		.byte	0x5
 255 0060 696E7400 		.ascii	"int\000"
 256 0064 02       		.uleb128 0x2
 257 0065 04       		.byte	0x4
 258 0066 07       		.byte	0x7
 259 0067 0E000000 		.4byte	.LASF8
 260 006b 04       		.uleb128 0x4
 261 006c 3E000000 		.4byte	.LASF9
 262 0070 02       		.byte	0x2
 263 0071 E901     		.2byte	0x1e9
 264 0073 2C000000 		.4byte	0x2c
 265 0077 04       		.uleb128 0x4
 266 0078 0F020000 		.4byte	.LASF10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 9


 267 007c 02       		.byte	0x2
 268 007d EA01     		.2byte	0x1ea
 269 007f 3A000000 		.4byte	0x3a
 270 0083 02       		.uleb128 0x2
 271 0084 04       		.byte	0x4
 272 0085 04       		.byte	0x4
 273 0086 FF010000 		.4byte	.LASF11
 274 008a 02       		.uleb128 0x2
 275 008b 08       		.byte	0x8
 276 008c 04       		.byte	0x4
 277 008d D2010000 		.4byte	.LASF12
 278 0091 02       		.uleb128 0x2
 279 0092 01       		.byte	0x1
 280 0093 08       		.byte	0x8
 281 0094 B9000000 		.4byte	.LASF13
 282 0098 04       		.uleb128 0x4
 283 0099 39000000 		.4byte	.LASF14
 284 009d 02       		.byte	0x2
 285 009e 9302     		.2byte	0x293
 286 00a0 A4000000 		.4byte	0xa4
 287 00a4 05       		.uleb128 0x5
 288 00a5 6B000000 		.4byte	0x6b
 289 00a9 02       		.uleb128 0x2
 290 00aa 04       		.byte	0x4
 291 00ab 07       		.byte	0x7
 292 00ac 42020000 		.4byte	.LASF15
 293 00b0 06       		.uleb128 0x6
 294 00b1 08       		.byte	0x8
 295 00b2 03       		.byte	0x3
 296 00b3 6B       		.byte	0x6b
 297 00b4 E9000000 		.4byte	0xe9
 298 00b8 07       		.uleb128 0x7
 299 00b9 1B000000 		.4byte	.LASF16
 300 00bd 03       		.byte	0x3
 301 00be 6E       		.byte	0x6e
 302 00bf 6B000000 		.4byte	0x6b
 303 00c3 00       		.byte	0
 304 00c4 07       		.uleb128 0x7
 305 00c5 D9010000 		.4byte	.LASF17
 306 00c9 03       		.byte	0x3
 307 00ca 71       		.byte	0x71
 308 00cb 77000000 		.4byte	0x77
 309 00cf 02       		.byte	0x2
 310 00d0 07       		.uleb128 0x7
 311 00d1 38020000 		.4byte	.LASF18
 312 00d5 03       		.byte	0x3
 313 00d6 73       		.byte	0x73
 314 00d7 77000000 		.4byte	0x77
 315 00db 04       		.byte	0x4
 316 00dc 07       		.uleb128 0x7
 317 00dd 82000000 		.4byte	.LASF19
 318 00e1 03       		.byte	0x3
 319 00e2 86       		.byte	0x86
 320 00e3 6B000000 		.4byte	0x6b
 321 00e7 06       		.byte	0x6
 322 00e8 00       		.byte	0
 323 00e9 08       		.uleb128 0x8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 10


 324 00ea 56000000 		.4byte	.LASF20
 325 00ee 03       		.byte	0x3
 326 00ef 8B       		.byte	0x8b
 327 00f0 B0000000 		.4byte	0xb0
 328 00f4 09       		.uleb128 0x9
 329 00f5 16020000 		.4byte	.LASF21
 330 00f9 01       		.byte	0x1
 331 00fa 2A       		.byte	0x2a
 332 00fb 00000000 		.4byte	.LFB0
 333 00ff 30000000 		.4byte	.LFE0-.LFB0
 334 0103 01       		.uleb128 0x1
 335 0104 9C       		.byte	0x9c
 336 0105 09       		.uleb128 0x9
 337 0106 CC000000 		.4byte	.LASF22
 338 010a 01       		.byte	0x1
 339 010b 58       		.byte	0x58
 340 010c 00000000 		.4byte	.LFB1
 341 0110 2C000000 		.4byte	.LFE1-.LFB1
 342 0114 01       		.uleb128 0x1
 343 0115 9C       		.byte	0x9c
 344 0116 09       		.uleb128 0x9
 345 0117 7B010000 		.4byte	.LASF23
 346 011b 01       		.byte	0x1
 347 011c 88       		.byte	0x88
 348 011d 00000000 		.4byte	.LFB2
 349 0121 34000000 		.4byte	.LFE2-.LFB2
 350 0125 01       		.uleb128 0x1
 351 0126 9C       		.byte	0x9c
 352 0127 09       		.uleb128 0x9
 353 0128 2A000000 		.4byte	.LASF24
 354 012c 01       		.byte	0x1
 355 012d B2       		.byte	0xb2
 356 012e 00000000 		.4byte	.LFB3
 357 0132 1C000000 		.4byte	.LFE3-.LFB3
 358 0136 01       		.uleb128 0x1
 359 0137 9C       		.byte	0x9c
 360 0138 0A       		.uleb128 0xa
 361 0139 29020000 		.4byte	.LASF28
 362 013d 01       		.byte	0x1
 363 013e 14       		.byte	0x14
 364 013f E9000000 		.4byte	0xe9
 365 0143 05       		.uleb128 0x5
 366 0144 03       		.byte	0x3
 367 0145 00000000 		.4byte	PWM_isr_backup
 368 0149 00       		.byte	0
 369              		.section	.debug_abbrev,"",%progbits
 370              	.Ldebug_abbrev0:
 371 0000 01       		.uleb128 0x1
 372 0001 11       		.uleb128 0x11
 373 0002 01       		.byte	0x1
 374 0003 25       		.uleb128 0x25
 375 0004 0E       		.uleb128 0xe
 376 0005 13       		.uleb128 0x13
 377 0006 0B       		.uleb128 0xb
 378 0007 03       		.uleb128 0x3
 379 0008 0E       		.uleb128 0xe
 380 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 11


 381 000a 0E       		.uleb128 0xe
 382 000b 55       		.uleb128 0x55
 383 000c 17       		.uleb128 0x17
 384 000d 11       		.uleb128 0x11
 385 000e 01       		.uleb128 0x1
 386 000f 10       		.uleb128 0x10
 387 0010 17       		.uleb128 0x17
 388 0011 00       		.byte	0
 389 0012 00       		.byte	0
 390 0013 02       		.uleb128 0x2
 391 0014 24       		.uleb128 0x24
 392 0015 00       		.byte	0
 393 0016 0B       		.uleb128 0xb
 394 0017 0B       		.uleb128 0xb
 395 0018 3E       		.uleb128 0x3e
 396 0019 0B       		.uleb128 0xb
 397 001a 03       		.uleb128 0x3
 398 001b 0E       		.uleb128 0xe
 399 001c 00       		.byte	0
 400 001d 00       		.byte	0
 401 001e 03       		.uleb128 0x3
 402 001f 24       		.uleb128 0x24
 403 0020 00       		.byte	0
 404 0021 0B       		.uleb128 0xb
 405 0022 0B       		.uleb128 0xb
 406 0023 3E       		.uleb128 0x3e
 407 0024 0B       		.uleb128 0xb
 408 0025 03       		.uleb128 0x3
 409 0026 08       		.uleb128 0x8
 410 0027 00       		.byte	0
 411 0028 00       		.byte	0
 412 0029 04       		.uleb128 0x4
 413 002a 16       		.uleb128 0x16
 414 002b 00       		.byte	0
 415 002c 03       		.uleb128 0x3
 416 002d 0E       		.uleb128 0xe
 417 002e 3A       		.uleb128 0x3a
 418 002f 0B       		.uleb128 0xb
 419 0030 3B       		.uleb128 0x3b
 420 0031 05       		.uleb128 0x5
 421 0032 49       		.uleb128 0x49
 422 0033 13       		.uleb128 0x13
 423 0034 00       		.byte	0
 424 0035 00       		.byte	0
 425 0036 05       		.uleb128 0x5
 426 0037 35       		.uleb128 0x35
 427 0038 00       		.byte	0
 428 0039 49       		.uleb128 0x49
 429 003a 13       		.uleb128 0x13
 430 003b 00       		.byte	0
 431 003c 00       		.byte	0
 432 003d 06       		.uleb128 0x6
 433 003e 13       		.uleb128 0x13
 434 003f 01       		.byte	0x1
 435 0040 0B       		.uleb128 0xb
 436 0041 0B       		.uleb128 0xb
 437 0042 3A       		.uleb128 0x3a
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 12


 438 0043 0B       		.uleb128 0xb
 439 0044 3B       		.uleb128 0x3b
 440 0045 0B       		.uleb128 0xb
 441 0046 01       		.uleb128 0x1
 442 0047 13       		.uleb128 0x13
 443 0048 00       		.byte	0
 444 0049 00       		.byte	0
 445 004a 07       		.uleb128 0x7
 446 004b 0D       		.uleb128 0xd
 447 004c 00       		.byte	0
 448 004d 03       		.uleb128 0x3
 449 004e 0E       		.uleb128 0xe
 450 004f 3A       		.uleb128 0x3a
 451 0050 0B       		.uleb128 0xb
 452 0051 3B       		.uleb128 0x3b
 453 0052 0B       		.uleb128 0xb
 454 0053 49       		.uleb128 0x49
 455 0054 13       		.uleb128 0x13
 456 0055 38       		.uleb128 0x38
 457 0056 0B       		.uleb128 0xb
 458 0057 00       		.byte	0
 459 0058 00       		.byte	0
 460 0059 08       		.uleb128 0x8
 461 005a 16       		.uleb128 0x16
 462 005b 00       		.byte	0
 463 005c 03       		.uleb128 0x3
 464 005d 0E       		.uleb128 0xe
 465 005e 3A       		.uleb128 0x3a
 466 005f 0B       		.uleb128 0xb
 467 0060 3B       		.uleb128 0x3b
 468 0061 0B       		.uleb128 0xb
 469 0062 49       		.uleb128 0x49
 470 0063 13       		.uleb128 0x13
 471 0064 00       		.byte	0
 472 0065 00       		.byte	0
 473 0066 09       		.uleb128 0x9
 474 0067 2E       		.uleb128 0x2e
 475 0068 00       		.byte	0
 476 0069 3F       		.uleb128 0x3f
 477 006a 19       		.uleb128 0x19
 478 006b 03       		.uleb128 0x3
 479 006c 0E       		.uleb128 0xe
 480 006d 3A       		.uleb128 0x3a
 481 006e 0B       		.uleb128 0xb
 482 006f 3B       		.uleb128 0x3b
 483 0070 0B       		.uleb128 0xb
 484 0071 27       		.uleb128 0x27
 485 0072 19       		.uleb128 0x19
 486 0073 11       		.uleb128 0x11
 487 0074 01       		.uleb128 0x1
 488 0075 12       		.uleb128 0x12
 489 0076 06       		.uleb128 0x6
 490 0077 40       		.uleb128 0x40
 491 0078 18       		.uleb128 0x18
 492 0079 9642     		.uleb128 0x2116
 493 007b 19       		.uleb128 0x19
 494 007c 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 13


 495 007d 00       		.byte	0
 496 007e 0A       		.uleb128 0xa
 497 007f 34       		.uleb128 0x34
 498 0080 00       		.byte	0
 499 0081 03       		.uleb128 0x3
 500 0082 0E       		.uleb128 0xe
 501 0083 3A       		.uleb128 0x3a
 502 0084 0B       		.uleb128 0xb
 503 0085 3B       		.uleb128 0x3b
 504 0086 0B       		.uleb128 0xb
 505 0087 49       		.uleb128 0x49
 506 0088 13       		.uleb128 0x13
 507 0089 02       		.uleb128 0x2
 508 008a 18       		.uleb128 0x18
 509 008b 00       		.byte	0
 510 008c 00       		.byte	0
 511 008d 00       		.byte	0
 512              		.section	.debug_aranges,"",%progbits
 513 0000 34000000 		.4byte	0x34
 514 0004 0200     		.2byte	0x2
 515 0006 00000000 		.4byte	.Ldebug_info0
 516 000a 04       		.byte	0x4
 517 000b 00       		.byte	0
 518 000c 0000     		.2byte	0
 519 000e 0000     		.2byte	0
 520 0010 00000000 		.4byte	.LFB0
 521 0014 30000000 		.4byte	.LFE0-.LFB0
 522 0018 00000000 		.4byte	.LFB1
 523 001c 2C000000 		.4byte	.LFE1-.LFB1
 524 0020 00000000 		.4byte	.LFB2
 525 0024 34000000 		.4byte	.LFE2-.LFB2
 526 0028 00000000 		.4byte	.LFB3
 527 002c 1C000000 		.4byte	.LFE3-.LFB3
 528 0030 00000000 		.4byte	0
 529 0034 00000000 		.4byte	0
 530              		.section	.debug_ranges,"",%progbits
 531              	.Ldebug_ranges0:
 532 0000 00000000 		.4byte	.LFB0
 533 0004 30000000 		.4byte	.LFE0
 534 0008 00000000 		.4byte	.LFB1
 535 000c 2C000000 		.4byte	.LFE1
 536 0010 00000000 		.4byte	.LFB2
 537 0014 34000000 		.4byte	.LFE2
 538 0018 00000000 		.4byte	.LFB3
 539 001c 1C000000 		.4byte	.LFE3
 540 0020 00000000 		.4byte	0
 541 0024 00000000 		.4byte	0
 542              		.section	.debug_line,"",%progbits
 543              	.Ldebug_line0:
 544 0000 AF000000 		.section	.debug_str,"MS",%progbits,1
 544      02005400 
 544      00000201 
 544      FB0E0D00 
 544      01010101 
 545              	.LASF6:
 546 0000 6C6F6E67 		.ascii	"long long int\000"
 546      206C6F6E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 14


 546      6720696E 
 546      7400
 547              	.LASF8:
 548 000e 756E7369 		.ascii	"unsigned int\000"
 548      676E6564 
 548      20696E74 
 548      00
 549              	.LASF16:
 550 001b 50574D45 		.ascii	"PWMEnableState\000"
 550      6E61626C 
 550      65537461 
 550      746500
 551              	.LASF24:
 552 002a 50574D5F 		.ascii	"PWM_isr_Wakeup\000"
 552      6973725F 
 552      57616B65 
 552      757000
 553              	.LASF14:
 554 0039 72656738 		.ascii	"reg8\000"
 554      00
 555              	.LASF9:
 556 003e 75696E74 		.ascii	"uint8\000"
 556      3800
 557              	.LASF5:
 558 0044 6C6F6E67 		.ascii	"long unsigned int\000"
 558      20756E73 
 558      69676E65 
 558      6420696E 
 558      7400
 559              	.LASF20:
 560 0056 50574D5F 		.ascii	"PWM_isr_backupStruct\000"
 560      6973725F 
 560      6261636B 
 560      75705374 
 560      72756374 
 561              	.LASF7:
 562 006b 6C6F6E67 		.ascii	"long long unsigned int\000"
 562      206C6F6E 
 562      6720756E 
 562      7369676E 
 562      65642069 
 563              	.LASF19:
 564 0082 50574D43 		.ascii	"PWMControlRegister\000"
 564      6F6E7472 
 564      6F6C5265 
 564      67697374 
 564      657200
 565              	.LASF26:
 566 0095 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_isr_PM.c\000"
 566      72617465 
 566      645F536F 
 566      75726365 
 566      5C50536F 
 567              	.LASF13:
 568 00b9 63686172 		.ascii	"char\000"
 568      00
 569              	.LASF1:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 15


 570 00be 756E7369 		.ascii	"unsigned char\000"
 570      676E6564 
 570      20636861 
 570      7200
 571              	.LASF22:
 572 00cc 50574D5F 		.ascii	"PWM_isr_RestoreConfig\000"
 572      6973725F 
 572      52657374 
 572      6F726543 
 572      6F6E6669 
 573              	.LASF25:
 574 00e2 474E5520 		.ascii	"GNU C99 5.4.1 20160609 (release) [ARM/embedded-5-br"
 574      43393920 
 574      352E342E 
 574      31203230 
 574      31363036 
 575 0115 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 575      20726576 
 575      6973696F 
 575      6E203233 
 575      37373135 
 576 0148 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 576      74643D67 
 576      6E753939 
 576      202D6666 
 576      756E6374 
 577              	.LASF23:
 578 017b 50574D5F 		.ascii	"PWM_isr_Sleep\000"
 578      6973725F 
 578      536C6565 
 578      7000
 579              	.LASF4:
 580 0189 6C6F6E67 		.ascii	"long int\000"
 580      20696E74 
 580      00
 581              	.LASF27:
 582 0192 433A5C55 		.ascii	"C:\\Users\\User\\Dropbox\\67 PSOC\\PSoC-Potentiosta"
 582      73657273 
 582      5C557365 
 582      725C4472 
 582      6F70626F 
 583 01c0 745C4269 		.ascii	"t\\Biosensor.cydsn\000"
 583      6F73656E 
 583      736F722E 
 583      63796473 
 583      6E00
 584              	.LASF12:
 585 01d2 646F7562 		.ascii	"double\000"
 585      6C6500
 586              	.LASF17:
 587 01d9 50574D55 		.ascii	"PWMUdb\000"
 587      646200
 588              	.LASF3:
 589 01e0 73686F72 		.ascii	"short unsigned int\000"
 589      7420756E 
 589      7369676E 
 589      65642069 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccCBOWOJ.s 			page 16


 589      6E7400
 590              	.LASF0:
 591 01f3 7369676E 		.ascii	"signed char\000"
 591      65642063 
 591      68617200 
 592              	.LASF11:
 593 01ff 666C6F61 		.ascii	"float\000"
 593      7400
 594              	.LASF2:
 595 0205 73686F72 		.ascii	"short int\000"
 595      7420696E 
 595      7400
 596              	.LASF10:
 597 020f 75696E74 		.ascii	"uint16\000"
 597      313600
 598              	.LASF21:
 599 0216 50574D5F 		.ascii	"PWM_isr_SaveConfig\000"
 599      6973725F 
 599      53617665 
 599      436F6E66 
 599      696700
 600              	.LASF28:
 601 0229 50574D5F 		.ascii	"PWM_isr_backup\000"
 601      6973725F 
 601      6261636B 
 601      757000
 602              	.LASF18:
 603 0238 50574D50 		.ascii	"PWMPeriod\000"
 603      6572696F 
 603      6400
 604              	.LASF15:
 605 0242 73697A65 		.ascii	"sizetype\000"
 605      74797065 
 605      00
 606              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
